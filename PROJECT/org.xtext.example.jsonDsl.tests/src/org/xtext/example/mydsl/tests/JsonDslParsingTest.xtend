/*
 * generated by Xtext 2.23.0
 */
package org.xtext.example.mydsl.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith
import org.xtext.example.mydsl.jsonDsl.Model
import org.xtext.example.mydsl.jsonDsl.*
import org.xtext.example.mydsl.jsonDsl.impl.*
import java.util.HashMap

@ExtendWith(InjectionExtension)
@InjectWith(JsonDslInjectorProvider)
class JsonDslParsingTest {
	@Inject
	ParseHelper<Model> parseHelper
	
	@Test
	def void loadModel() {
		val result = parseHelper.parse('''
			2.4e3
		''')
		
		val stmts = result.stmts
		
		var elementTable = new HashMap<String, Object>
		
		stmts.forEach[ element, index |
			println((element as Primitive).getStr())
		]
		
		Assertions.assertNotNull(result)
		//val errors = result.eResource.errors
		//Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
}
