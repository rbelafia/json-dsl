/*
 * generated by Xtext 2.23.0
 */
grammar InternalJsonDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.JsonDslGrammarAccess;

}
@parser::members {
	private JsonDslGrammarAccess grammarAccess;

	public void setGrammarAccess(JsonDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getStmtsAssignment()); }
		(rule__Model__StmtsAssignment)*
		{ after(grammarAccess.getModelAccess().getStmtsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleStatement
entryRuleSimpleStatement
:
{ before(grammarAccess.getSimpleStatementRule()); }
	 ruleSimpleStatement
{ after(grammarAccess.getSimpleStatementRule()); } 
	 EOF 
;

// Rule SimpleStatement
ruleSimpleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleStatementAccess().getGroup()); }
		(rule__SimpleStatement__Group__0)
		{ after(grammarAccess.getSimpleStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignment
entryRuleAssignment
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignmentAccess().getGroup()); }
		(rule__Assignment__Group__0)
		{ after(grammarAccess.getAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getExpressionLvl1ParserRuleCall()); }
		ruleExpressionLvl1
		{ after(grammarAccess.getExpressionAccess().getExpressionLvl1ParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionLvl1
entryRuleExpressionLvl1
:
{ before(grammarAccess.getExpressionLvl1Rule()); }
	 ruleExpressionLvl1
{ after(grammarAccess.getExpressionLvl1Rule()); } 
	 EOF 
;

// Rule ExpressionLvl1
ruleExpressionLvl1 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionLvl1Access().getGroup()); }
		(rule__ExpressionLvl1__Group__0)
		{ after(grammarAccess.getExpressionLvl1Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionLvl2
entryRuleExpressionLvl2
:
{ before(grammarAccess.getExpressionLvl2Rule()); }
	 ruleExpressionLvl2
{ after(grammarAccess.getExpressionLvl2Rule()); } 
	 EOF 
;

// Rule ExpressionLvl2
ruleExpressionLvl2 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionLvl2Access().getGroup()); }
		(rule__ExpressionLvl2__Group__0)
		{ after(grammarAccess.getExpressionLvl2Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionLvl3
entryRuleExpressionLvl3
:
{ before(grammarAccess.getExpressionLvl3Rule()); }
	 ruleExpressionLvl3
{ after(grammarAccess.getExpressionLvl3Rule()); } 
	 EOF 
;

// Rule ExpressionLvl3
ruleExpressionLvl3 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionLvl3Access().getGroup()); }
		(rule__ExpressionLvl3__Group__0)
		{ after(grammarAccess.getExpressionLvl3Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionLvl4
entryRuleExpressionLvl4
:
{ before(grammarAccess.getExpressionLvl4Rule()); }
	 ruleExpressionLvl4
{ after(grammarAccess.getExpressionLvl4Rule()); } 
	 EOF 
;

// Rule ExpressionLvl4
ruleExpressionLvl4 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionLvl4Access().getGroup()); }
		(rule__ExpressionLvl4__Group__0)
		{ after(grammarAccess.getExpressionLvl4Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionLvl5
entryRuleExpressionLvl5
:
{ before(grammarAccess.getExpressionLvl5Rule()); }
	 ruleExpressionLvl5
{ after(grammarAccess.getExpressionLvl5Rule()); } 
	 EOF 
;

// Rule ExpressionLvl5
ruleExpressionLvl5 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionLvl5Access().getGroup()); }
		(rule__ExpressionLvl5__Group__0)
		{ after(grammarAccess.getExpressionLvl5Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionLvl6
entryRuleExpressionLvl6
:
{ before(grammarAccess.getExpressionLvl6Rule()); }
	 ruleExpressionLvl6
{ after(grammarAccess.getExpressionLvl6Rule()); } 
	 EOF 
;

// Rule ExpressionLvl6
ruleExpressionLvl6 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionLvl6Access().getGroup()); }
		(rule__ExpressionLvl6__Group__0)
		{ after(grammarAccess.getExpressionLvl6Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionLvl7
entryRuleExpressionLvl7
:
{ before(grammarAccess.getExpressionLvl7Rule()); }
	 ruleExpressionLvl7
{ after(grammarAccess.getExpressionLvl7Rule()); } 
	 EOF 
;

// Rule ExpressionLvl7
ruleExpressionLvl7 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionLvl7Access().getAlternatives()); }
		(rule__ExpressionLvl7__Alternatives)
		{ after(grammarAccess.getExpressionLvl7Access().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryMinusExpression
entryRuleUnaryMinusExpression
:
{ before(grammarAccess.getUnaryMinusExpressionRule()); }
	 ruleUnaryMinusExpression
{ after(grammarAccess.getUnaryMinusExpressionRule()); } 
	 EOF 
;

// Rule UnaryMinusExpression
ruleUnaryMinusExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryMinusExpressionAccess().getGroup()); }
		(rule__UnaryMinusExpression__Group__0)
		{ after(grammarAccess.getUnaryMinusExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryPlusExpression
entryRuleUnaryPlusExpression
:
{ before(grammarAccess.getUnaryPlusExpressionRule()); }
	 ruleUnaryPlusExpression
{ after(grammarAccess.getUnaryPlusExpressionRule()); } 
	 EOF 
;

// Rule UnaryPlusExpression
ruleUnaryPlusExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryPlusExpressionAccess().getGroup()); }
		(rule__UnaryPlusExpression__Group__0)
		{ after(grammarAccess.getUnaryPlusExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionLvl8
entryRuleExpressionLvl8
:
{ before(grammarAccess.getExpressionLvl8Rule()); }
	 ruleExpressionLvl8
{ after(grammarAccess.getExpressionLvl8Rule()); } 
	 EOF 
;

// Rule ExpressionLvl8
ruleExpressionLvl8 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionLvl8Access().getAlternatives()); }
		(rule__ExpressionLvl8__Alternatives)
		{ after(grammarAccess.getExpressionLvl8Access().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicalNegationExpression
entryRuleLogicalNegationExpression
:
{ before(grammarAccess.getLogicalNegationExpressionRule()); }
	 ruleLogicalNegationExpression
{ after(grammarAccess.getLogicalNegationExpressionRule()); } 
	 EOF 
;

// Rule LogicalNegationExpression
ruleLogicalNegationExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalNegationExpressionAccess().getGroup()); }
		(rule__LogicalNegationExpression__Group__0)
		{ after(grammarAccess.getLogicalNegationExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
		(rule__PrimaryExpression__Alternatives)
		{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBracketExpression
entryRuleBracketExpression
:
{ before(grammarAccess.getBracketExpressionRule()); }
	 ruleBracketExpression
{ after(grammarAccess.getBracketExpressionRule()); } 
	 EOF 
;

// Rule BracketExpression
ruleBracketExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBracketExpressionAccess().getGroup()); }
		(rule__BracketExpression__Group__0)
		{ after(grammarAccess.getBracketExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePointer
entryRulePointer
:
{ before(grammarAccess.getPointerRule()); }
	 rulePointer
{ after(grammarAccess.getPointerRule()); } 
	 EOF 
;

// Rule Pointer
rulePointer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPointerAccess().getQuestionMarkKeyword()); }
		'?'
		{ after(grammarAccess.getPointerAccess().getQuestionMarkKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableCall
entryRuleVariableCall
:
{ before(grammarAccess.getVariableCallRule()); }
	 ruleVariableCall
{ after(grammarAccess.getVariableCallRule()); } 
	 EOF 
;

// Rule VariableCall
ruleVariableCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableCallAccess().getGroup()); }
		(rule__VariableCall__Group__0)
		{ after(grammarAccess.getVariableCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAuxiliarCaller
entryRuleAuxiliarCaller
:
{ before(grammarAccess.getAuxiliarCallerRule()); }
	 ruleAuxiliarCaller
{ after(grammarAccess.getAuxiliarCallerRule()); } 
	 EOF 
;

// Rule AuxiliarCaller
ruleAuxiliarCaller 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAuxiliarCallerAccess().getAlternatives()); }
		(rule__AuxiliarCaller__Alternatives)
		{ after(grammarAccess.getAuxiliarCallerAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFieldCaller
entryRuleFieldCaller
:
{ before(grammarAccess.getFieldCallerRule()); }
	 ruleFieldCaller
{ after(grammarAccess.getFieldCallerRule()); } 
	 EOF 
;

// Rule FieldCaller
ruleFieldCaller 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldCallerAccess().getGroup()); }
		(rule__FieldCaller__Group__0)
		{ after(grammarAccess.getFieldCallerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayCaller
entryRuleArrayCaller
:
{ before(grammarAccess.getArrayCallerRule()); }
	 ruleArrayCaller
{ after(grammarAccess.getArrayCallerRule()); } 
	 EOF 
;

// Rule ArrayCaller
ruleArrayCaller 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayCallerAccess().getGroup()); }
		(rule__ArrayCaller__Group__0)
		{ after(grammarAccess.getArrayCallerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionCall
entryRuleFunctionCall
:
{ before(grammarAccess.getFunctionCallRule()); }
	 ruleFunctionCall
{ after(grammarAccess.getFunctionCallRule()); } 
	 EOF 
;

// Rule FunctionCall
ruleFunctionCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionCallAccess().getAlternatives()); }
		(rule__FunctionCall__Alternatives)
		{ after(grammarAccess.getFunctionCallAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIOFunctions
entryRuleIOFunctions
:
{ before(grammarAccess.getIOFunctionsRule()); }
	 ruleIOFunctions
{ after(grammarAccess.getIOFunctionsRule()); } 
	 EOF 
;

// Rule IOFunctions
ruleIOFunctions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIOFunctionsAccess().getAlternatives()); }
		(rule__IOFunctions__Alternatives)
		{ after(grammarAccess.getIOFunctionsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInfoFunctions
entryRuleInfoFunctions
:
{ before(grammarAccess.getInfoFunctionsRule()); }
	 ruleInfoFunctions
{ after(grammarAccess.getInfoFunctionsRule()); } 
	 EOF 
;

// Rule InfoFunctions
ruleInfoFunctions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInfoFunctionsAccess().getAlternatives()); }
		(rule__InfoFunctions__Alternatives)
		{ after(grammarAccess.getInfoFunctionsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleManipFunctions
entryRuleManipFunctions
:
{ before(grammarAccess.getManipFunctionsRule()); }
	 ruleManipFunctions
{ after(grammarAccess.getManipFunctionsRule()); } 
	 EOF 
;

// Rule ManipFunctions
ruleManipFunctions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getManipFunctionsAccess().getAlternatives()); }
		(rule__ManipFunctions__Alternatives)
		{ after(grammarAccess.getManipFunctionsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArithFunctions
entryRuleArithFunctions
:
{ before(grammarAccess.getArithFunctionsRule()); }
	 ruleArithFunctions
{ after(grammarAccess.getArithFunctionsRule()); } 
	 EOF 
;

// Rule ArithFunctions
ruleArithFunctions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArithFunctionsAccess().getAlternatives()); }
		(rule__ArithFunctions__Alternatives)
		{ after(grammarAccess.getArithFunctionsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAlterFunctions
entryRuleAlterFunctions
:
{ before(grammarAccess.getAlterFunctionsRule()); }
	 ruleAlterFunctions
{ after(grammarAccess.getAlterFunctionsRule()); } 
	 EOF 
;

// Rule AlterFunctions
ruleAlterFunctions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAlterFunctionsAccess().getAlternatives()); }
		(rule__AlterFunctions__Alternatives)
		{ after(grammarAccess.getAlterFunctionsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLoad
entryRuleLoad
:
{ before(grammarAccess.getLoadRule()); }
	 ruleLoad
{ after(grammarAccess.getLoadRule()); } 
	 EOF 
;

// Rule Load
ruleLoad 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLoadAccess().getGroup()); }
		(rule__Load__Group__0)
		{ after(grammarAccess.getLoadAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStore
entryRuleStore
:
{ before(grammarAccess.getStoreRule()); }
	 ruleStore
{ after(grammarAccess.getStoreRule()); } 
	 EOF 
;

// Rule Store
ruleStore 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStoreAccess().getGroup()); }
		(rule__Store__Group__0)
		{ after(grammarAccess.getStoreAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExport
entryRuleExport
:
{ before(grammarAccess.getExportRule()); }
	 ruleExport
{ after(grammarAccess.getExportRule()); } 
	 EOF 
;

// Rule Export
ruleExport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExportAccess().getGroup()); }
		(rule__Export__Group__0)
		{ after(grammarAccess.getExportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcCall
entryRuleProcCall
:
{ before(grammarAccess.getProcCallRule()); }
	 ruleProcCall
{ after(grammarAccess.getProcCallRule()); } 
	 EOF 
;

// Rule ProcCall
ruleProcCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcCallAccess().getGroup()); }
		(rule__ProcCall__Group__0)
		{ after(grammarAccess.getProcCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDepth
entryRuleDepth
:
{ before(grammarAccess.getDepthRule()); }
	 ruleDepth
{ after(grammarAccess.getDepthRule()); } 
	 EOF 
;

// Rule Depth
ruleDepth 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDepthAccess().getGroup()); }
		(rule__Depth__Group__0)
		{ after(grammarAccess.getDepthAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFieldInfo
entryRuleFieldInfo
:
{ before(grammarAccess.getFieldInfoRule()); }
	 ruleFieldInfo
{ after(grammarAccess.getFieldInfoRule()); } 
	 EOF 
;

// Rule FieldInfo
ruleFieldInfo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldInfoAccess().getGroup()); }
		(rule__FieldInfo__Group__0)
		{ after(grammarAccess.getFieldInfoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContains
entryRuleContains
:
{ before(grammarAccess.getContainsRule()); }
	 ruleContains
{ after(grammarAccess.getContainsRule()); } 
	 EOF 
;

// Rule Contains
ruleContains 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContainsAccess().getGroup()); }
		(rule__Contains__Group__0)
		{ after(grammarAccess.getContainsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelect
entryRuleSelect
:
{ before(grammarAccess.getSelectRule()); }
	 ruleSelect
{ after(grammarAccess.getSelectRule()); } 
	 EOF 
;

// Rule Select
ruleSelect 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectAccess().getGroup()); }
		(rule__Select__Group__0)
		{ after(grammarAccess.getSelectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConcat
entryRuleConcat
:
{ before(grammarAccess.getConcatRule()); }
	 ruleConcat
{ after(grammarAccess.getConcatRule()); } 
	 EOF 
;

// Rule Concat
ruleConcat 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConcatAccess().getGroup()); }
		(rule__Concat__Group__0)
		{ after(grammarAccess.getConcatAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSum
entryRuleSum
:
{ before(grammarAccess.getSumRule()); }
	 ruleSum
{ after(grammarAccess.getSumRule()); } 
	 EOF 
;

// Rule Sum
ruleSum 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSumAccess().getGroup()); }
		(rule__Sum__Group__0)
		{ after(grammarAccess.getSumAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProduct
entryRuleProduct
:
{ before(grammarAccess.getProductRule()); }
	 ruleProduct
{ after(grammarAccess.getProductRule()); } 
	 EOF 
;

// Rule Product
ruleProduct 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProductAccess().getGroup()); }
		(rule__Product__Group__0)
		{ after(grammarAccess.getProductAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMean
entryRuleMean
:
{ before(grammarAccess.getMeanRule()); }
	 ruleMean
{ after(grammarAccess.getMeanRule()); } 
	 EOF 
;

// Rule Mean
ruleMean 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMeanAccess().getGroup()); }
		(rule__Mean__Group__0)
		{ after(grammarAccess.getMeanAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdd
entryRuleAdd
:
{ before(grammarAccess.getAddRule()); }
	 ruleAdd
{ after(grammarAccess.getAddRule()); } 
	 EOF 
;

// Rule Add
ruleAdd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddAccess().getGroup()); }
		(rule__Add__Group__0)
		{ after(grammarAccess.getAddAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInsert
entryRuleInsert
:
{ before(grammarAccess.getInsertRule()); }
	 ruleInsert
{ after(grammarAccess.getInsertRule()); } 
	 EOF 
;

// Rule Insert
ruleInsert 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInsertAccess().getGroup()); }
		(rule__Insert__Group__0)
		{ after(grammarAccess.getInsertAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRename
entryRuleRename
:
{ before(grammarAccess.getRenameRule()); }
	 ruleRename
{ after(grammarAccess.getRenameRule()); } 
	 EOF 
;

// Rule Rename
ruleRename 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRenameAccess().getGroup()); }
		(rule__Rename__Group__0)
		{ after(grammarAccess.getRenameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDelete
entryRuleDelete
:
{ before(grammarAccess.getDeleteRule()); }
	 ruleDelete
{ after(grammarAccess.getDeleteRule()); } 
	 EOF 
;

// Rule Delete
ruleDelete 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeleteAccess().getGroup()); }
		(rule__Delete__Group__0)
		{ after(grammarAccess.getDeleteAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRemove
entryRuleRemove
:
{ before(grammarAccess.getRemoveRule()); }
	 ruleRemove
{ after(grammarAccess.getRemoveRule()); } 
	 EOF 
;

// Rule Remove
ruleRemove 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRemoveAccess().getGroup()); }
		(rule__Remove__Group__0)
		{ after(grammarAccess.getRemoveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstant
entryRuleConstant
:
{ before(grammarAccess.getConstantRule()); }
	 ruleConstant
{ after(grammarAccess.getConstantRule()); } 
	 EOF 
;

// Rule Constant
ruleConstant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstantAccess().getAlternatives()); }
		(rule__Constant__Alternatives)
		{ after(grammarAccess.getConstantAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimitive
entryRulePrimitive
:
{ before(grammarAccess.getPrimitiveRule()); }
	 rulePrimitive
{ after(grammarAccess.getPrimitiveRule()); } 
	 EOF 
;

// Rule Primitive
rulePrimitive 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimitiveAccess().getAlternatives()); }
		(rule__Primitive__Alternatives)
		{ after(grammarAccess.getPrimitiveAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArray
entryRuleArray
:
{ before(grammarAccess.getArrayRule()); }
	 ruleArray
{ after(grammarAccess.getArrayRule()); } 
	 EOF 
;

// Rule Array
ruleArray 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayAccess().getGroup()); }
		(rule__Array__Group__0)
		{ after(grammarAccess.getArrayAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJSonObject
entryRuleJSonObject
:
{ before(grammarAccess.getJSonObjectRule()); }
	 ruleJSonObject
{ after(grammarAccess.getJSonObjectRule()); } 
	 EOF 
;

// Rule JSonObject
ruleJSonObject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJSonObjectAccess().getGroup()); }
		(rule__JSonObject__Group__0)
		{ after(grammarAccess.getJSonObjectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleField
entryRuleField
:
{ before(grammarAccess.getFieldRule()); }
	 ruleField
{ after(grammarAccess.getFieldRule()); } 
	 EOF 
;

// Rule Field
ruleField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldAccess().getGroup()); }
		(rule__Field__Group__0)
		{ after(grammarAccess.getFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNUMBER
entryRuleNUMBER
:
{ before(grammarAccess.getNUMBERRule()); }
	 ruleNUMBER
{ after(grammarAccess.getNUMBERRule()); } 
	 EOF 
;

// Rule NUMBER
ruleNUMBER 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNUMBERAccess().getAlternatives()); }
		(rule__NUMBER__Alternatives)
		{ after(grammarAccess.getNUMBERAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStatementAccess().getAssignmentParserRuleCall_0_0()); }
		ruleAssignment
		{ after(grammarAccess.getSimpleStatementAccess().getAssignmentParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleStatementAccess().getExpressionParserRuleCall_0_1()); }
		ruleExpression
		{ after(grammarAccess.getSimpleStatementAccess().getExpressionParserRuleCall_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleStatementAccess().getProcCallParserRuleCall_0_2()); }
		ruleProcCall
		{ after(grammarAccess.getSimpleStatementAccess().getProcCallParserRuleCall_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl3__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLvl3Access().getGroup_1_0()); }
		(rule__ExpressionLvl3__Group_1_0__0)
		{ after(grammarAccess.getExpressionLvl3Access().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLvl3Access().getGroup_1_1()); }
		(rule__ExpressionLvl3__Group_1_1__0)
		{ after(grammarAccess.getExpressionLvl3Access().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl4__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLvl4Access().getGroup_1_0()); }
		(rule__ExpressionLvl4__Group_1_0__0)
		{ after(grammarAccess.getExpressionLvl4Access().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLvl4Access().getGroup_1_1()); }
		(rule__ExpressionLvl4__Group_1_1__0)
		{ after(grammarAccess.getExpressionLvl4Access().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLvl4Access().getGroup_1_2()); }
		(rule__ExpressionLvl4__Group_1_2__0)
		{ after(grammarAccess.getExpressionLvl4Access().getGroup_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLvl4Access().getGroup_1_3()); }
		(rule__ExpressionLvl4__Group_1_3__0)
		{ after(grammarAccess.getExpressionLvl4Access().getGroup_1_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl5__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLvl5Access().getGroup_1_0()); }
		(rule__ExpressionLvl5__Group_1_0__0)
		{ after(grammarAccess.getExpressionLvl5Access().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLvl5Access().getGroup_1_1()); }
		(rule__ExpressionLvl5__Group_1_1__0)
		{ after(grammarAccess.getExpressionLvl5Access().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl6__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLvl6Access().getGroup_1_0()); }
		(rule__ExpressionLvl6__Group_1_0__0)
		{ after(grammarAccess.getExpressionLvl6Access().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLvl6Access().getGroup_1_1()); }
		(rule__ExpressionLvl6__Group_1_1__0)
		{ after(grammarAccess.getExpressionLvl6Access().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLvl6Access().getGroup_1_2()); }
		(rule__ExpressionLvl6__Group_1_2__0)
		{ after(grammarAccess.getExpressionLvl6Access().getGroup_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl7__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLvl7Access().getUnaryMinusExpressionParserRuleCall_0()); }
		ruleUnaryMinusExpression
		{ after(grammarAccess.getExpressionLvl7Access().getUnaryMinusExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLvl7Access().getUnaryPlusExpressionParserRuleCall_1()); }
		ruleUnaryPlusExpression
		{ after(grammarAccess.getExpressionLvl7Access().getUnaryPlusExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLvl7Access().getExpressionLvl8ParserRuleCall_2()); }
		ruleExpressionLvl8
		{ after(grammarAccess.getExpressionLvl7Access().getExpressionLvl8ParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl8__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLvl8Access().getLogicalNegationExpressionParserRuleCall_0()); }
		ruleLogicalNegationExpression
		{ after(grammarAccess.getExpressionLvl8Access().getLogicalNegationExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLvl8Access().getPrimaryExpressionParserRuleCall_1()); }
		rulePrimaryExpression
		{ after(grammarAccess.getExpressionLvl8Access().getPrimaryExpressionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getVariableCallParserRuleCall_0()); }
		ruleVariableCall
		{ after(grammarAccess.getPrimaryExpressionAccess().getVariableCallParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getConstantParserRuleCall_1()); }
		ruleConstant
		{ after(grammarAccess.getPrimaryExpressionAccess().getConstantParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getFunctionCallParserRuleCall_2()); }
		ruleFunctionCall
		{ after(grammarAccess.getPrimaryExpressionAccess().getFunctionCallParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getBracketExpressionParserRuleCall_3()); }
		ruleBracketExpression
		{ after(grammarAccess.getPrimaryExpressionAccess().getBracketExpressionParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_4()); }
		(rule__PrimaryExpression__Group_4__0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AuxiliarCaller__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAuxiliarCallerAccess().getFieldCallerParserRuleCall_0()); }
		ruleFieldCaller
		{ after(grammarAccess.getAuxiliarCallerAccess().getFieldCallerParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAuxiliarCallerAccess().getArrayCallerParserRuleCall_1()); }
		ruleArrayCaller
		{ after(grammarAccess.getAuxiliarCallerAccess().getArrayCallerParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallAccess().getIOFunctionsParserRuleCall_0()); }
		ruleIOFunctions
		{ after(grammarAccess.getFunctionCallAccess().getIOFunctionsParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionCallAccess().getInfoFunctionsParserRuleCall_1()); }
		ruleInfoFunctions
		{ after(grammarAccess.getFunctionCallAccess().getInfoFunctionsParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionCallAccess().getManipFunctionsParserRuleCall_2()); }
		ruleManipFunctions
		{ after(grammarAccess.getFunctionCallAccess().getManipFunctionsParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionCallAccess().getArithFunctionsParserRuleCall_3()); }
		ruleArithFunctions
		{ after(grammarAccess.getFunctionCallAccess().getArithFunctionsParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionCallAccess().getAlterFunctionsParserRuleCall_4()); }
		ruleAlterFunctions
		{ after(grammarAccess.getFunctionCallAccess().getAlterFunctionsParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IOFunctions__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIOFunctionsAccess().getLoadParserRuleCall_0()); }
		ruleLoad
		{ after(grammarAccess.getIOFunctionsAccess().getLoadParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getIOFunctionsAccess().getStoreParserRuleCall_1()); }
		ruleStore
		{ after(grammarAccess.getIOFunctionsAccess().getStoreParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getIOFunctionsAccess().getExportParserRuleCall_2()); }
		ruleExport
		{ after(grammarAccess.getIOFunctionsAccess().getExportParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfoFunctions__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInfoFunctionsAccess().getDepthParserRuleCall_0()); }
		ruleDepth
		{ after(grammarAccess.getInfoFunctionsAccess().getDepthParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getInfoFunctionsAccess().getFieldInfoParserRuleCall_1()); }
		ruleFieldInfo
		{ after(grammarAccess.getInfoFunctionsAccess().getFieldInfoParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getInfoFunctionsAccess().getContainsParserRuleCall_2()); }
		ruleContains
		{ after(grammarAccess.getInfoFunctionsAccess().getContainsParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ManipFunctions__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getManipFunctionsAccess().getSelectParserRuleCall_0()); }
		ruleSelect
		{ after(grammarAccess.getManipFunctionsAccess().getSelectParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getManipFunctionsAccess().getConcatParserRuleCall_1()); }
		ruleConcat
		{ after(grammarAccess.getManipFunctionsAccess().getConcatParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithFunctions__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArithFunctionsAccess().getSumParserRuleCall_0()); }
		ruleSum
		{ after(grammarAccess.getArithFunctionsAccess().getSumParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getArithFunctionsAccess().getProductParserRuleCall_1()); }
		ruleProduct
		{ after(grammarAccess.getArithFunctionsAccess().getProductParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getArithFunctionsAccess().getMeanParserRuleCall_2()); }
		ruleMean
		{ after(grammarAccess.getArithFunctionsAccess().getMeanParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlterFunctions__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlterFunctionsAccess().getAddParserRuleCall_0()); }
		ruleAdd
		{ after(grammarAccess.getAlterFunctionsAccess().getAddParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAlterFunctionsAccess().getInsertParserRuleCall_1()); }
		ruleInsert
		{ after(grammarAccess.getAlterFunctionsAccess().getInsertParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAlterFunctionsAccess().getRenameParserRuleCall_2()); }
		ruleRename
		{ after(grammarAccess.getAlterFunctionsAccess().getRenameParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getAlterFunctionsAccess().getRemoveParserRuleCall_3()); }
		ruleRemove
		{ after(grammarAccess.getAlterFunctionsAccess().getRemoveParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getAlterFunctionsAccess().getDeleteParserRuleCall_4()); }
		ruleDelete
		{ after(grammarAccess.getAlterFunctionsAccess().getDeleteParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getAsteriskKeyword_2_0()); }
		'*'
		{ after(grammarAccess.getSelectAccess().getAsteriskKeyword_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelectAccess().getGroup_2_1()); }
		(rule__Select__Group_2_1__0)?
		{ after(grammarAccess.getSelectAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeleteAccess().getAsteriskKeyword_2_0()); }
		'*'
		{ after(grammarAccess.getDeleteAccess().getAsteriskKeyword_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getDeleteAccess().getGroup_2_1()); }
		(rule__Delete__Group_2_1__0)?
		{ after(grammarAccess.getDeleteAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getPrimitiveParserRuleCall_0()); }
		rulePrimitive
		{ after(grammarAccess.getConstantAccess().getPrimitiveParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstantAccess().getArrayParserRuleCall_1()); }
		ruleArray
		{ after(grammarAccess.getConstantAccess().getArrayParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getConstantAccess().getJSonObjectParserRuleCall_2()); }
		ruleJSonObject
		{ after(grammarAccess.getConstantAccess().getJSonObjectParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveAccess().getStrAssignment_0()); }
		(rule__Primitive__StrAssignment_0)
		{ after(grammarAccess.getPrimitiveAccess().getStrAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveAccess().getNumAssignment_1()); }
		(rule__Primitive__NumAssignment_1)
		{ after(grammarAccess.getPrimitiveAccess().getNumAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveAccess().getBoolAssignment_2()); }
		(rule__Primitive__BoolAssignment_2)
		{ after(grammarAccess.getPrimitiveAccess().getBoolAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveAccess().getNilAssignment_3()); }
		(rule__Primitive__NilAssignment_3)
		{ after(grammarAccess.getPrimitiveAccess().getNilAssignment_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNUMBERAccess().getDOUBLETerminalRuleCall_1()); }
		RULE_DOUBLE
		{ after(grammarAccess.getNUMBERAccess().getDOUBLETerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group__0__Impl
	rule__SimpleStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getAlternatives_0()); }
	(rule__SimpleStatement__Alternatives_0)
	{ after(grammarAccess.getSimpleStatementAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getSemicolonKeyword_1()); }
	';'
	{ after(grammarAccess.getSimpleStatementAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getLeftHandSideAssignment_0()); }
	(rule__Assignment__LeftHandSideAssignment_0)
	{ after(grammarAccess.getAssignmentAccess().getLeftHandSideAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__1__Impl
	rule__Assignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getRightHandSideAssignment_2()); }
	(rule__Assignment__RightHandSideAssignment_2)
	{ after(grammarAccess.getAssignmentAccess().getRightHandSideAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLvl1__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl1__Group__0__Impl
	rule__ExpressionLvl1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl1__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl1Access().getExpressionLvl2ParserRuleCall_0()); }
	ruleExpressionLvl2
	{ after(grammarAccess.getExpressionLvl1Access().getExpressionLvl2ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl1__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl1__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl1__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl1Access().getGroup_1()); }
	(rule__ExpressionLvl1__Group_1__0)*
	{ after(grammarAccess.getExpressionLvl1Access().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLvl1__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl1__Group_1__0__Impl
	rule__ExpressionLvl1__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl1__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl1Access().getDisjunctionExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getExpressionLvl1Access().getDisjunctionExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl1__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl1__Group_1__1__Impl
	rule__ExpressionLvl1__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl1__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl1Access().getORKeyword_1_1()); }
	'OR'
	{ after(grammarAccess.getExpressionLvl1Access().getORKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl1__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl1__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl1__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl1Access().getRightAssignment_1_2()); }
	(rule__ExpressionLvl1__RightAssignment_1_2)
	{ after(grammarAccess.getExpressionLvl1Access().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLvl2__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl2__Group__0__Impl
	rule__ExpressionLvl2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl2__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl2Access().getExpressionLvl3ParserRuleCall_0()); }
	ruleExpressionLvl3
	{ after(grammarAccess.getExpressionLvl2Access().getExpressionLvl3ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl2__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl2__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl2__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl2Access().getGroup_1()); }
	(rule__ExpressionLvl2__Group_1__0)*
	{ after(grammarAccess.getExpressionLvl2Access().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLvl2__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl2__Group_1__0__Impl
	rule__ExpressionLvl2__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl2__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl2Access().getConjunctionExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getExpressionLvl2Access().getConjunctionExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl2__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl2__Group_1__1__Impl
	rule__ExpressionLvl2__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl2__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl2Access().getANDKeyword_1_1()); }
	'AND'
	{ after(grammarAccess.getExpressionLvl2Access().getANDKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl2__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl2__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl2__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl2Access().getRightAssignment_1_2()); }
	(rule__ExpressionLvl2__RightAssignment_1_2)
	{ after(grammarAccess.getExpressionLvl2Access().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLvl3__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl3__Group__0__Impl
	rule__ExpressionLvl3__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl3__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl3Access().getExpressionLvl4ParserRuleCall_0()); }
	ruleExpressionLvl4
	{ after(grammarAccess.getExpressionLvl3Access().getExpressionLvl4ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl3__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl3__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl3__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl3Access().getAlternatives_1()); }
	(rule__ExpressionLvl3__Alternatives_1)*
	{ after(grammarAccess.getExpressionLvl3Access().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLvl3__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl3__Group_1_0__0__Impl
	rule__ExpressionLvl3__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl3__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl3Access().getEqualityExpressionLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getExpressionLvl3Access().getEqualityExpressionLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl3__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl3__Group_1_0__1__Impl
	rule__ExpressionLvl3__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl3__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl3Access().getEqualsSignEqualsSignKeyword_1_0_1()); }
	'=='
	{ after(grammarAccess.getExpressionLvl3Access().getEqualsSignEqualsSignKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl3__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl3__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl3__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl3Access().getRightAssignment_1_0_2()); }
	(rule__ExpressionLvl3__RightAssignment_1_0_2)
	{ after(grammarAccess.getExpressionLvl3Access().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLvl3__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl3__Group_1_1__0__Impl
	rule__ExpressionLvl3__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl3__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl3Access().getInequalityExpressionLeftAction_1_1_0()); }
	()
	{ after(grammarAccess.getExpressionLvl3Access().getInequalityExpressionLeftAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl3__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl3__Group_1_1__1__Impl
	rule__ExpressionLvl3__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl3__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl3Access().getExclamationMarkEqualsSignKeyword_1_1_1()); }
	'!='
	{ after(grammarAccess.getExpressionLvl3Access().getExclamationMarkEqualsSignKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl3__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl3__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl3__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl3Access().getRightAssignment_1_1_2()); }
	(rule__ExpressionLvl3__RightAssignment_1_1_2)
	{ after(grammarAccess.getExpressionLvl3Access().getRightAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLvl4__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl4__Group__0__Impl
	rule__ExpressionLvl4__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl4__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl4Access().getExpressionLvl5ParserRuleCall_0()); }
	ruleExpressionLvl5
	{ after(grammarAccess.getExpressionLvl4Access().getExpressionLvl5ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl4__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl4__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl4__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl4Access().getAlternatives_1()); }
	(rule__ExpressionLvl4__Alternatives_1)*
	{ after(grammarAccess.getExpressionLvl4Access().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLvl4__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl4__Group_1_0__0__Impl
	rule__ExpressionLvl4__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl4__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl4Access().getSuperiExpressionLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getExpressionLvl4Access().getSuperiExpressionLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl4__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl4__Group_1_0__1__Impl
	rule__ExpressionLvl4__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl4__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl4Access().getGreaterThanSignKeyword_1_0_1()); }
	'>'
	{ after(grammarAccess.getExpressionLvl4Access().getGreaterThanSignKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl4__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl4__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl4__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl4Access().getRightAssignment_1_0_2()); }
	(rule__ExpressionLvl4__RightAssignment_1_0_2)
	{ after(grammarAccess.getExpressionLvl4Access().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLvl4__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl4__Group_1_1__0__Impl
	rule__ExpressionLvl4__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl4__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl4Access().getSuperiorOrEqualExpressionLeftAction_1_1_0()); }
	()
	{ after(grammarAccess.getExpressionLvl4Access().getSuperiorOrEqualExpressionLeftAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl4__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl4__Group_1_1__1__Impl
	rule__ExpressionLvl4__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl4__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl4Access().getGreaterThanSignEqualsSignKeyword_1_1_1()); }
	'>='
	{ after(grammarAccess.getExpressionLvl4Access().getGreaterThanSignEqualsSignKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl4__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl4__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl4__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl4Access().getRightAssignment_1_1_2()); }
	(rule__ExpressionLvl4__RightAssignment_1_1_2)
	{ after(grammarAccess.getExpressionLvl4Access().getRightAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLvl4__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl4__Group_1_2__0__Impl
	rule__ExpressionLvl4__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl4__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl4Access().getInferiExpressionLeftAction_1_2_0()); }
	()
	{ after(grammarAccess.getExpressionLvl4Access().getInferiExpressionLeftAction_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl4__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl4__Group_1_2__1__Impl
	rule__ExpressionLvl4__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl4__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl4Access().getLessThanSignKeyword_1_2_1()); }
	'<'
	{ after(grammarAccess.getExpressionLvl4Access().getLessThanSignKeyword_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl4__Group_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl4__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl4__Group_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl4Access().getRightAssignment_1_2_2()); }
	(rule__ExpressionLvl4__RightAssignment_1_2_2)
	{ after(grammarAccess.getExpressionLvl4Access().getRightAssignment_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLvl4__Group_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl4__Group_1_3__0__Impl
	rule__ExpressionLvl4__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl4__Group_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl4Access().getInferiorOrEqualExpressionLeftAction_1_3_0()); }
	()
	{ after(grammarAccess.getExpressionLvl4Access().getInferiorOrEqualExpressionLeftAction_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl4__Group_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl4__Group_1_3__1__Impl
	rule__ExpressionLvl4__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl4__Group_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl4Access().getLessThanSignEqualsSignKeyword_1_3_1()); }
	'<='
	{ after(grammarAccess.getExpressionLvl4Access().getLessThanSignEqualsSignKeyword_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl4__Group_1_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl4__Group_1_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl4__Group_1_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl4Access().getRightAssignment_1_3_2()); }
	(rule__ExpressionLvl4__RightAssignment_1_3_2)
	{ after(grammarAccess.getExpressionLvl4Access().getRightAssignment_1_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLvl5__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl5__Group__0__Impl
	rule__ExpressionLvl5__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl5__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl5Access().getExpressionLvl6ParserRuleCall_0()); }
	ruleExpressionLvl6
	{ after(grammarAccess.getExpressionLvl5Access().getExpressionLvl6ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl5__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl5__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl5__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl5Access().getAlternatives_1()); }
	(rule__ExpressionLvl5__Alternatives_1)*
	{ after(grammarAccess.getExpressionLvl5Access().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLvl5__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl5__Group_1_0__0__Impl
	rule__ExpressionLvl5__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl5__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl5Access().getAdditionExpressionLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getExpressionLvl5Access().getAdditionExpressionLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl5__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl5__Group_1_0__1__Impl
	rule__ExpressionLvl5__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl5__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl5Access().getPlusSignKeyword_1_0_1()); }
	'+'
	{ after(grammarAccess.getExpressionLvl5Access().getPlusSignKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl5__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl5__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl5__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl5Access().getRightAssignment_1_0_2()); }
	(rule__ExpressionLvl5__RightAssignment_1_0_2)
	{ after(grammarAccess.getExpressionLvl5Access().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLvl5__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl5__Group_1_1__0__Impl
	rule__ExpressionLvl5__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl5__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl5Access().getSubstractionExpressionLeftAction_1_1_0()); }
	()
	{ after(grammarAccess.getExpressionLvl5Access().getSubstractionExpressionLeftAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl5__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl5__Group_1_1__1__Impl
	rule__ExpressionLvl5__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl5__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl5Access().getHyphenMinusKeyword_1_1_1()); }
	'-'
	{ after(grammarAccess.getExpressionLvl5Access().getHyphenMinusKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl5__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl5__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl5__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl5Access().getRightAssignment_1_1_2()); }
	(rule__ExpressionLvl5__RightAssignment_1_1_2)
	{ after(grammarAccess.getExpressionLvl5Access().getRightAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLvl6__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl6__Group__0__Impl
	rule__ExpressionLvl6__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl6__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl6Access().getExpressionLvl7ParserRuleCall_0()); }
	ruleExpressionLvl7
	{ after(grammarAccess.getExpressionLvl6Access().getExpressionLvl7ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl6__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl6__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl6__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl6Access().getAlternatives_1()); }
	(rule__ExpressionLvl6__Alternatives_1)*
	{ after(grammarAccess.getExpressionLvl6Access().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLvl6__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl6__Group_1_0__0__Impl
	rule__ExpressionLvl6__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl6__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl6Access().getMultiplicationExpressionLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getExpressionLvl6Access().getMultiplicationExpressionLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl6__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl6__Group_1_0__1__Impl
	rule__ExpressionLvl6__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl6__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl6Access().getAsteriskKeyword_1_0_1()); }
	'*'
	{ after(grammarAccess.getExpressionLvl6Access().getAsteriskKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl6__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl6__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl6__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl6Access().getRightAssignment_1_0_2()); }
	(rule__ExpressionLvl6__RightAssignment_1_0_2)
	{ after(grammarAccess.getExpressionLvl6Access().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLvl6__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl6__Group_1_1__0__Impl
	rule__ExpressionLvl6__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl6__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl6Access().getDivisionExpressionLeftAction_1_1_0()); }
	()
	{ after(grammarAccess.getExpressionLvl6Access().getDivisionExpressionLeftAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl6__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl6__Group_1_1__1__Impl
	rule__ExpressionLvl6__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl6__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl6Access().getSolidusKeyword_1_1_1()); }
	'/'
	{ after(grammarAccess.getExpressionLvl6Access().getSolidusKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl6__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl6__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl6__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl6Access().getRightAssignment_1_1_2()); }
	(rule__ExpressionLvl6__RightAssignment_1_1_2)
	{ after(grammarAccess.getExpressionLvl6Access().getRightAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLvl6__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl6__Group_1_2__0__Impl
	rule__ExpressionLvl6__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl6__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl6Access().getModuloExpressionLeftAction_1_2_0()); }
	()
	{ after(grammarAccess.getExpressionLvl6Access().getModuloExpressionLeftAction_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl6__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl6__Group_1_2__1__Impl
	rule__ExpressionLvl6__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl6__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl6Access().getPercentSignKeyword_1_2_1()); }
	'%'
	{ after(grammarAccess.getExpressionLvl6Access().getPercentSignKeyword_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl6__Group_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLvl6__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl6__Group_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLvl6Access().getRightAssignment_1_2_2()); }
	(rule__ExpressionLvl6__RightAssignment_1_2_2)
	{ after(grammarAccess.getExpressionLvl6Access().getRightAssignment_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryMinusExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryMinusExpression__Group__0__Impl
	rule__UnaryMinusExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryMinusExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryMinusExpressionAccess().getHyphenMinusKeyword_0()); }
	'-'
	{ after(grammarAccess.getUnaryMinusExpressionAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryMinusExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryMinusExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryMinusExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryMinusExpressionAccess().getSubAssignment_1()); }
	(rule__UnaryMinusExpression__SubAssignment_1)
	{ after(grammarAccess.getUnaryMinusExpressionAccess().getSubAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryPlusExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryPlusExpression__Group__0__Impl
	rule__UnaryPlusExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryPlusExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryPlusExpressionAccess().getPlusSignKeyword_0()); }
	'+'
	{ after(grammarAccess.getUnaryPlusExpressionAccess().getPlusSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryPlusExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryPlusExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryPlusExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryPlusExpressionAccess().getSubAssignment_1()); }
	(rule__UnaryPlusExpression__SubAssignment_1)
	{ after(grammarAccess.getUnaryPlusExpressionAccess().getSubAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalNegationExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalNegationExpression__Group__0__Impl
	rule__LogicalNegationExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalNegationExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalNegationExpressionAccess().getExclamationMarkKeyword_0()); }
	'!'
	{ after(grammarAccess.getLogicalNegationExpressionAccess().getExclamationMarkKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalNegationExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalNegationExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalNegationExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalNegationExpressionAccess().getSubAssignment_1()); }
	(rule__LogicalNegationExpression__SubAssignment_1)
	{ after(grammarAccess.getLogicalNegationExpressionAccess().getSubAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_4__0__Impl
	rule__PrimaryExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getPrimaryExpressionAction_4_0()); }
	()
	{ after(grammarAccess.getPrimaryExpressionAccess().getPrimaryExpressionAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getPointerParserRuleCall_4_1()); }
	rulePointer
	{ after(grammarAccess.getPrimaryExpressionAccess().getPointerParserRuleCall_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BracketExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BracketExpression__Group__0__Impl
	rule__BracketExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BracketExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBracketExpressionAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getBracketExpressionAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BracketExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BracketExpression__Group__1__Impl
	rule__BracketExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BracketExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBracketExpressionAccess().getSubAssignment_1()); }
	(rule__BracketExpression__SubAssignment_1)
	{ after(grammarAccess.getBracketExpressionAccess().getSubAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BracketExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BracketExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BracketExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBracketExpressionAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getBracketExpressionAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableCall__Group__0__Impl
	rule__VariableCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableCallAccess().getNameAssignment_0()); }
	(rule__VariableCall__NameAssignment_0)
	{ after(grammarAccess.getVariableCallAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableCall__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableCallAccess().getCallerAssignment_1()); }
	(rule__VariableCall__CallerAssignment_1)*
	{ after(grammarAccess.getVariableCallAccess().getCallerAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FieldCaller__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldCaller__Group__0__Impl
	rule__FieldCaller__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldCaller__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldCallerAccess().getTildeKeyword_0()); }
	'~'
	{ after(grammarAccess.getFieldCallerAccess().getTildeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldCaller__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldCaller__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldCaller__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldCallerAccess().getKeyAssignment_1()); }
	(rule__FieldCaller__KeyAssignment_1)
	{ after(grammarAccess.getFieldCallerAccess().getKeyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayCaller__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayCaller__Group__0__Impl
	rule__ArrayCaller__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayCaller__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayCallerAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getArrayCallerAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayCaller__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayCaller__Group__1__Impl
	rule__ArrayCaller__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayCaller__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayCallerAccess().getIndexAssignment_1()); }
	(rule__ArrayCaller__IndexAssignment_1)
	{ after(grammarAccess.getArrayCallerAccess().getIndexAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayCaller__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayCaller__Group__2__Impl
	rule__ArrayCaller__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayCaller__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayCallerAccess().getGroup_2()); }
	(rule__ArrayCaller__Group_2__0)*
	{ after(grammarAccess.getArrayCallerAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayCaller__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayCaller__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayCaller__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayCallerAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getArrayCallerAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayCaller__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayCaller__Group_2__0__Impl
	rule__ArrayCaller__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayCaller__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayCallerAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getArrayCallerAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayCaller__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayCaller__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayCaller__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayCallerAccess().getIndexAssignment_2_1()); }
	(rule__ArrayCaller__IndexAssignment_2_1)
	{ after(grammarAccess.getArrayCallerAccess().getIndexAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Load__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Load__Group__0__Impl
	rule__Load__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadAccess().getLOADKeyword_0()); }
	'LOAD'
	{ after(grammarAccess.getLoadAccess().getLOADKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Load__Group__1__Impl
	rule__Load__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getLoadAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Load__Group__2__Impl
	rule__Load__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadAccess().getFileNameAssignment_2()); }
	(rule__Load__FileNameAssignment_2)
	{ after(grammarAccess.getLoadAccess().getFileNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Load__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getLoadAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Store__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Store__Group__0__Impl
	rule__Store__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoreAccess().getSTOREKeyword_0()); }
	'STORE'
	{ after(grammarAccess.getStoreAccess().getSTOREKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Store__Group__1__Impl
	rule__Store__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoreAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getStoreAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Store__Group__2__Impl
	rule__Store__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoreAccess().getExpressionAssignment_2()); }
	(rule__Store__ExpressionAssignment_2)
	{ after(grammarAccess.getStoreAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Store__Group__3__Impl
	rule__Store__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoreAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getStoreAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Store__Group__4__Impl
	rule__Store__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoreAccess().getINKeyword_4()); }
	'IN'
	{ after(grammarAccess.getStoreAccess().getINKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Store__Group__5__Impl
	rule__Store__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoreAccess().getLeftParenthesisKeyword_5()); }
	'('
	{ after(grammarAccess.getStoreAccess().getLeftParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Store__Group__6__Impl
	rule__Store__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoreAccess().getFileNameAssignment_6()); }
	(rule__Store__FileNameAssignment_6)
	{ after(grammarAccess.getStoreAccess().getFileNameAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Store__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoreAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getStoreAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Export__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Export__Group__0__Impl
	rule__Export__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportAccess().getEXPORT_CSVKeyword_0()); }
	'EXPORT_CSV'
	{ after(grammarAccess.getExportAccess().getEXPORT_CSVKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Export__Group__1__Impl
	rule__Export__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getExportAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Export__Group__2__Impl
	rule__Export__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportAccess().getExpressionAssignment_2()); }
	(rule__Export__ExpressionAssignment_2)
	{ after(grammarAccess.getExportAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Export__Group__3__Impl
	rule__Export__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getExportAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Export__Group__4__Impl
	rule__Export__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportAccess().getINKeyword_4()); }
	'IN'
	{ after(grammarAccess.getExportAccess().getINKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Export__Group__5__Impl
	rule__Export__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportAccess().getLeftParenthesisKeyword_5()); }
	'('
	{ after(grammarAccess.getExportAccess().getLeftParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Export__Group__6__Impl
	rule__Export__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportAccess().getFileNameAssignment_6()); }
	(rule__Export__FileNameAssignment_6)
	{ after(grammarAccess.getExportAccess().getFileNameAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Export__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getExportAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcCall__Group__0__Impl
	rule__ProcCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcCallAccess().getPRINTKeyword_0()); }
	'PRINT'
	{ after(grammarAccess.getProcCallAccess().getPRINTKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcCall__Group__1__Impl
	rule__ProcCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcCallAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getProcCallAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcCall__Group__2__Impl
	rule__ProcCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcCallAccess().getExpressionAssignment_2()); }
	(rule__ProcCall__ExpressionAssignment_2)
	{ after(grammarAccess.getProcCallAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcCall__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcCallAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getProcCallAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Depth__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Depth__Group__0__Impl
	rule__Depth__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Depth__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDepthAccess().getGET_DEPTHKeyword_0()); }
	'GET_DEPTH'
	{ after(grammarAccess.getDepthAccess().getGET_DEPTHKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Depth__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Depth__Group__1__Impl
	rule__Depth__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Depth__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDepthAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getDepthAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Depth__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Depth__Group__2__Impl
	rule__Depth__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Depth__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDepthAccess().getExpressionAssignment_2()); }
	(rule__Depth__ExpressionAssignment_2)
	{ after(grammarAccess.getDepthAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Depth__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Depth__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Depth__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDepthAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getDepthAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FieldInfo__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldInfo__Group__0__Impl
	rule__FieldInfo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldInfo__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldInfoAccess().getGET_INFOSKeyword_0()); }
	'GET_INFOS'
	{ after(grammarAccess.getFieldInfoAccess().getGET_INFOSKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldInfo__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldInfo__Group__1__Impl
	rule__FieldInfo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldInfo__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldInfoAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getFieldInfoAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldInfo__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldInfo__Group__2__Impl
	rule__FieldInfo__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldInfo__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldInfoAccess().getExpressionAssignment_2()); }
	(rule__FieldInfo__ExpressionAssignment_2)
	{ after(grammarAccess.getFieldInfoAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldInfo__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldInfo__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldInfo__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldInfoAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getFieldInfoAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Contains__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contains__Group__0__Impl
	rule__Contains__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainsAccess().getISKeyword_0()); }
	'IS'
	{ after(grammarAccess.getContainsAccess().getISKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contains__Group__1__Impl
	rule__Contains__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainsAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getContainsAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contains__Group__2__Impl
	rule__Contains__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainsAccess().getKeysAssignment_2()); }
	(rule__Contains__KeysAssignment_2)
	{ after(grammarAccess.getContainsAccess().getKeysAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contains__Group__3__Impl
	rule__Contains__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainsAccess().getGroup_3()); }
	(rule__Contains__Group_3__0)*
	{ after(grammarAccess.getContainsAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contains__Group__4__Impl
	rule__Contains__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainsAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getContainsAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contains__Group__5__Impl
	rule__Contains__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainsAccess().getINKeyword_5()); }
	'IN'
	{ after(grammarAccess.getContainsAccess().getINKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contains__Group__6__Impl
	rule__Contains__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainsAccess().getLeftParenthesisKeyword_6()); }
	'('
	{ after(grammarAccess.getContainsAccess().getLeftParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contains__Group__7__Impl
	rule__Contains__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainsAccess().getRightAssignment_7()); }
	(rule__Contains__RightAssignment_7)
	{ after(grammarAccess.getContainsAccess().getRightAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contains__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainsAccess().getRightParenthesisKeyword_8()); }
	')'
	{ after(grammarAccess.getContainsAccess().getRightParenthesisKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Contains__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contains__Group_3__0__Impl
	rule__Contains__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainsAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getContainsAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contains__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainsAccess().getKeysAssignment_3_1()); }
	(rule__Contains__KeysAssignment_3_1)
	{ after(grammarAccess.getContainsAccess().getKeysAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__0__Impl
	rule__Select__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getSELECTKeyword_0()); }
	'SELECT'
	{ after(grammarAccess.getSelectAccess().getSELECTKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__1__Impl
	rule__Select__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getSelectAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__2__Impl
	rule__Select__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getAlternatives_2()); }
	(rule__Select__Alternatives_2)
	{ after(grammarAccess.getSelectAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__3__Impl
	rule__Select__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getSelectAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__4__Impl
	rule__Select__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getFROMKeyword_4()); }
	'FROM'
	{ after(grammarAccess.getSelectAccess().getFROMKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__5__Impl
	rule__Select__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getLeftParenthesisKeyword_5()); }
	'('
	{ after(grammarAccess.getSelectAccess().getLeftParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__6__Impl
	rule__Select__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getFromExpressionAssignment_6()); }
	(rule__Select__FromExpressionAssignment_6)
	{ after(grammarAccess.getSelectAccess().getFromExpressionAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__7__Impl
	rule__Select__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getSelectAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getGroup_8()); }
	(rule__Select__Group_8__0)?
	{ after(grammarAccess.getSelectAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_2_1__0__Impl
	rule__Select__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getFieldsAssignment_2_1_0()); }
	(rule__Select__FieldsAssignment_2_1_0)
	{ after(grammarAccess.getSelectAccess().getFieldsAssignment_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getGroup_2_1_1()); }
	(rule__Select__Group_2_1_1__0)*
	{ after(grammarAccess.getSelectAccess().getGroup_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_2_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_2_1_1__0__Impl
	rule__Select__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_2_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getCommaKeyword_2_1_1_0()); }
	','
	{ after(grammarAccess.getSelectAccess().getCommaKeyword_2_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_2_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_2_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getFieldsAssignment_2_1_1_1()); }
	(rule__Select__FieldsAssignment_2_1_1_1)
	{ after(grammarAccess.getSelectAccess().getFieldsAssignment_2_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_8__0__Impl
	rule__Select__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getWHEREKeyword_8_0()); }
	('WHERE')
	{ after(grammarAccess.getSelectAccess().getWHEREKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_8__1__Impl
	rule__Select__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getLeftParenthesisKeyword_8_1()); }
	'('
	{ after(grammarAccess.getSelectAccess().getLeftParenthesisKeyword_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_8__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_8__2__Impl
	rule__Select__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_8__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getWhereExpressionAssignment_8_2()); }
	(rule__Select__WhereExpressionAssignment_8_2)
	{ after(grammarAccess.getSelectAccess().getWhereExpressionAssignment_8_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_8__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_8__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_8__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getRightParenthesisKeyword_8_3()); }
	')'
	{ after(grammarAccess.getSelectAccess().getRightParenthesisKeyword_8_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Concat__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concat__Group__0__Impl
	rule__Concat__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcatAccess().getCONCATKeyword_0()); }
	'CONCAT'
	{ after(grammarAccess.getConcatAccess().getCONCATKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concat__Group__1__Impl
	rule__Concat__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcatAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getConcatAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concat__Group__2__Impl
	rule__Concat__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcatAccess().getExpressionsAssignment_2()); }
	(rule__Concat__ExpressionsAssignment_2)
	{ after(grammarAccess.getConcatAccess().getExpressionsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concat__Group__3__Impl
	rule__Concat__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcatAccess().getGroup_3()); }
	(rule__Concat__Group_3__0)
	{ after(grammarAccess.getConcatAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concat__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcatAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getConcatAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Concat__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concat__Group_3__0__Impl
	rule__Concat__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcatAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getConcatAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concat__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcatAccess().getExpressionsAssignment_3_1()); }
	(rule__Concat__ExpressionsAssignment_3_1)
	{ after(grammarAccess.getConcatAccess().getExpressionsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sum__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group__0__Impl
	rule__Sum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getSUMKeyword_0()); }
	'SUM'
	{ after(grammarAccess.getSumAccess().getSUMKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group__1__Impl
	rule__Sum__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getSumAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group__2__Impl
	rule__Sum__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getExpressionAssignment_2()); }
	(rule__Sum__ExpressionAssignment_2)
	{ after(grammarAccess.getSumAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group__3__Impl
	rule__Sum__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getSumAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group__4__Impl
	rule__Sum__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getGroup_4()); }
	(rule__Sum__Group_4__0)?
	{ after(grammarAccess.getSumAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getGroup_5()); }
	(rule__Sum__Group_5__0)?
	{ after(grammarAccess.getSumAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sum__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group_4__0__Impl
	rule__Sum__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getONKeyword_4_0()); }
	'ON'
	{ after(grammarAccess.getSumAccess().getONKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group_4__1__Impl
	rule__Sum__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getLeftParenthesisKeyword_4_1()); }
	'('
	{ after(grammarAccess.getSumAccess().getLeftParenthesisKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group_4__2__Impl
	rule__Sum__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getFieldsAssignment_4_2()); }
	(rule__Sum__FieldsAssignment_4_2)
	{ after(grammarAccess.getSumAccess().getFieldsAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group_4__3__Impl
	rule__Sum__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getGroup_4_3()); }
	(rule__Sum__Group_4_3__0)*
	{ after(grammarAccess.getSumAccess().getGroup_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getRightParenthesisKeyword_4_4()); }
	')'
	{ after(grammarAccess.getSumAccess().getRightParenthesisKeyword_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sum__Group_4_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group_4_3__0__Impl
	rule__Sum__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_4_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getCommaKeyword_4_3_0()); }
	','
	{ after(grammarAccess.getSumAccess().getCommaKeyword_4_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_4_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_4_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getFieldsAssignment_4_3_1()); }
	(rule__Sum__FieldsAssignment_4_3_1)
	{ after(grammarAccess.getSumAccess().getFieldsAssignment_4_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sum__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group_5__0__Impl
	rule__Sum__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getWHEREKeyword_5_0()); }
	('WHERE')
	{ after(grammarAccess.getSumAccess().getWHEREKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group_5__1__Impl
	rule__Sum__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getLeftParenthesisKeyword_5_1()); }
	'('
	{ after(grammarAccess.getSumAccess().getLeftParenthesisKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group_5__2__Impl
	rule__Sum__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getWhereExpressionAssignment_5_2()); }
	(rule__Sum__WhereExpressionAssignment_5_2)
	{ after(grammarAccess.getSumAccess().getWhereExpressionAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getRightParenthesisKeyword_5_3()); }
	')'
	{ after(grammarAccess.getSumAccess().getRightParenthesisKeyword_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Product__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Product__Group__0__Impl
	rule__Product__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductAccess().getPRODUCTKeyword_0()); }
	'PRODUCT'
	{ after(grammarAccess.getProductAccess().getPRODUCTKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Product__Group__1__Impl
	rule__Product__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getProductAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Product__Group__2__Impl
	rule__Product__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductAccess().getExpressionAssignment_2()); }
	(rule__Product__ExpressionAssignment_2)
	{ after(grammarAccess.getProductAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Product__Group__3__Impl
	rule__Product__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getProductAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Product__Group__4__Impl
	rule__Product__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductAccess().getGroup_4()); }
	(rule__Product__Group_4__0)?
	{ after(grammarAccess.getProductAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Product__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductAccess().getGroup_5()); }
	(rule__Product__Group_5__0)?
	{ after(grammarAccess.getProductAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Product__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Product__Group_4__0__Impl
	rule__Product__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductAccess().getONKeyword_4_0()); }
	'ON'
	{ after(grammarAccess.getProductAccess().getONKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Product__Group_4__1__Impl
	rule__Product__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductAccess().getLeftParenthesisKeyword_4_1()); }
	'('
	{ after(grammarAccess.getProductAccess().getLeftParenthesisKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Product__Group_4__2__Impl
	rule__Product__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductAccess().getFieldsAssignment_4_2()); }
	(rule__Product__FieldsAssignment_4_2)
	{ after(grammarAccess.getProductAccess().getFieldsAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Product__Group_4__3__Impl
	rule__Product__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductAccess().getGroup_4_3()); }
	(rule__Product__Group_4_3__0)*
	{ after(grammarAccess.getProductAccess().getGroup_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Product__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductAccess().getRightParenthesisKeyword_4_4()); }
	')'
	{ after(grammarAccess.getProductAccess().getRightParenthesisKeyword_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Product__Group_4_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Product__Group_4_3__0__Impl
	rule__Product__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group_4_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductAccess().getCommaKeyword_4_3_0()); }
	','
	{ after(grammarAccess.getProductAccess().getCommaKeyword_4_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group_4_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Product__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group_4_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductAccess().getFieldsAssignment_4_3_1()); }
	(rule__Product__FieldsAssignment_4_3_1)
	{ after(grammarAccess.getProductAccess().getFieldsAssignment_4_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Product__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Product__Group_5__0__Impl
	rule__Product__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductAccess().getWHEREKeyword_5_0()); }
	('WHERE')
	{ after(grammarAccess.getProductAccess().getWHEREKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Product__Group_5__1__Impl
	rule__Product__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductAccess().getLeftParenthesisKeyword_5_1()); }
	'('
	{ after(grammarAccess.getProductAccess().getLeftParenthesisKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Product__Group_5__2__Impl
	rule__Product__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductAccess().getWhereExpressionAssignment_5_2()); }
	(rule__Product__WhereExpressionAssignment_5_2)
	{ after(grammarAccess.getProductAccess().getWhereExpressionAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Product__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductAccess().getRightParenthesisKeyword_5_3()); }
	')'
	{ after(grammarAccess.getProductAccess().getRightParenthesisKeyword_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mean__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mean__Group__0__Impl
	rule__Mean__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mean__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeanAccess().getMEANKeyword_0()); }
	'MEAN'
	{ after(grammarAccess.getMeanAccess().getMEANKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mean__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mean__Group__1__Impl
	rule__Mean__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mean__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeanAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getMeanAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mean__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mean__Group__2__Impl
	rule__Mean__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mean__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeanAccess().getExpressionAssignment_2()); }
	(rule__Mean__ExpressionAssignment_2)
	{ after(grammarAccess.getMeanAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mean__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mean__Group__3__Impl
	rule__Mean__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Mean__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeanAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getMeanAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mean__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mean__Group__4__Impl
	rule__Mean__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Mean__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeanAccess().getGroup_4()); }
	(rule__Mean__Group_4__0)?
	{ after(grammarAccess.getMeanAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mean__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mean__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mean__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeanAccess().getGroup_5()); }
	(rule__Mean__Group_5__0)?
	{ after(grammarAccess.getMeanAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mean__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mean__Group_4__0__Impl
	rule__Mean__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mean__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeanAccess().getONKeyword_4_0()); }
	'ON'
	{ after(grammarAccess.getMeanAccess().getONKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mean__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mean__Group_4__1__Impl
	rule__Mean__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mean__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeanAccess().getLeftParenthesisKeyword_4_1()); }
	'('
	{ after(grammarAccess.getMeanAccess().getLeftParenthesisKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mean__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mean__Group_4__2__Impl
	rule__Mean__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mean__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeanAccess().getFieldsAssignment_4_2()); }
	(rule__Mean__FieldsAssignment_4_2)
	{ after(grammarAccess.getMeanAccess().getFieldsAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mean__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mean__Group_4__3__Impl
	rule__Mean__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Mean__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeanAccess().getGroup_4_3()); }
	(rule__Mean__Group_4_3__0)*
	{ after(grammarAccess.getMeanAccess().getGroup_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mean__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mean__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mean__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeanAccess().getRightParenthesisKeyword_4_4()); }
	')'
	{ after(grammarAccess.getMeanAccess().getRightParenthesisKeyword_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mean__Group_4_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mean__Group_4_3__0__Impl
	rule__Mean__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mean__Group_4_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeanAccess().getCommaKeyword_4_3_0()); }
	','
	{ after(grammarAccess.getMeanAccess().getCommaKeyword_4_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mean__Group_4_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mean__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mean__Group_4_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeanAccess().getFieldsAssignment_4_3_1()); }
	(rule__Mean__FieldsAssignment_4_3_1)
	{ after(grammarAccess.getMeanAccess().getFieldsAssignment_4_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mean__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mean__Group_5__0__Impl
	rule__Mean__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mean__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeanAccess().getWHEREKeyword_5_0()); }
	('WHERE')
	{ after(grammarAccess.getMeanAccess().getWHEREKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mean__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mean__Group_5__1__Impl
	rule__Mean__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mean__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeanAccess().getLeftParenthesisKeyword_5_1()); }
	'('
	{ after(grammarAccess.getMeanAccess().getLeftParenthesisKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mean__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mean__Group_5__2__Impl
	rule__Mean__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mean__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeanAccess().getWhereExpressionAssignment_5_2()); }
	(rule__Mean__WhereExpressionAssignment_5_2)
	{ after(grammarAccess.getMeanAccess().getWhereExpressionAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mean__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mean__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mean__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMeanAccess().getRightParenthesisKeyword_5_3()); }
	')'
	{ after(grammarAccess.getMeanAccess().getRightParenthesisKeyword_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Add__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__0__Impl
	rule__Add__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getADDKeyword_0()); }
	'ADD'
	{ after(grammarAccess.getAddAccess().getADDKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__1__Impl
	rule__Add__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getAddAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__2__Impl
	rule__Add__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getExpressionAssignment_2()); }
	(rule__Add__ExpressionAssignment_2)
	{ after(grammarAccess.getAddAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__3__Impl
	rule__Add__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getAddAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__4__Impl
	rule__Add__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getINKeyword_4()); }
	'IN'
	{ after(grammarAccess.getAddAccess().getINKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__5__Impl
	rule__Add__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getLeftParenthesisKeyword_5()); }
	'('
	{ after(grammarAccess.getAddAccess().getLeftParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__6__Impl
	rule__Add__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getVariableAssignment_6()); }
	(rule__Add__VariableAssignment_6)
	{ after(grammarAccess.getAddAccess().getVariableAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__7__Impl
	rule__Add__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getAddAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getGroup_8()); }
	(rule__Add__Group_8__0)?
	{ after(grammarAccess.getAddAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Add__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group_8__0__Impl
	rule__Add__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getONKeyword_8_0()); }
	'ON'
	{ after(grammarAccess.getAddAccess().getONKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group_8__1__Impl
	rule__Add__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getLeftParenthesisKeyword_8_1()); }
	'('
	{ after(grammarAccess.getAddAccess().getLeftParenthesisKeyword_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group_8__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group_8__2__Impl
	rule__Add__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group_8__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getFieldsAssignment_8_2()); }
	(rule__Add__FieldsAssignment_8_2)
	{ after(grammarAccess.getAddAccess().getFieldsAssignment_8_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group_8__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group_8__3__Impl
	rule__Add__Group_8__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group_8__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getGroup_8_3()); }
	(rule__Add__Group_8_3__0)*
	{ after(grammarAccess.getAddAccess().getGroup_8_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group_8__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group_8__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group_8__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getRightParenthesisKeyword_8_4()); }
	')'
	{ after(grammarAccess.getAddAccess().getRightParenthesisKeyword_8_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Add__Group_8_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group_8_3__0__Impl
	rule__Add__Group_8_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group_8_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getCommaKeyword_8_3_0()); }
	','
	{ after(grammarAccess.getAddAccess().getCommaKeyword_8_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group_8_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group_8_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group_8_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getFieldsAssignment_8_3_1()); }
	(rule__Add__FieldsAssignment_8_3_1)
	{ after(grammarAccess.getAddAccess().getFieldsAssignment_8_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Insert__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group__0__Impl
	rule__Insert__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getINSERTKeyword_0()); }
	'INSERT'
	{ after(grammarAccess.getInsertAccess().getINSERTKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group__1__Impl
	rule__Insert__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getInsertAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group__2__Impl
	rule__Insert__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getValueAssignment_2()); }
	(rule__Insert__ValueAssignment_2)
	{ after(grammarAccess.getInsertAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group__3__Impl
	rule__Insert__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getInsertAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group__4__Impl
	rule__Insert__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getINKeyword_4()); }
	'IN'
	{ after(grammarAccess.getInsertAccess().getINKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group__5__Impl
	rule__Insert__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getLeftParenthesisKeyword_5()); }
	'('
	{ after(grammarAccess.getInsertAccess().getLeftParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group__6__Impl
	rule__Insert__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getVariableAssignment_6()); }
	(rule__Insert__VariableAssignment_6)
	{ after(grammarAccess.getInsertAccess().getVariableAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group__7__Impl
	rule__Insert__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getInsertAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getGroup_8()); }
	(rule__Insert__Group_8__0)?
	{ after(grammarAccess.getInsertAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Insert__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group_8__0__Impl
	rule__Insert__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getLeftParenthesisKeyword_8_0()); }
	'('
	{ after(grammarAccess.getInsertAccess().getLeftParenthesisKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group_8__1__Impl
	rule__Insert__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getWHEREKeyword_8_1()); }
	'WHERE'
	{ after(grammarAccess.getInsertAccess().getWHEREKeyword_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group_8__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group_8__2__Impl
	rule__Insert__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group_8__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getWhereExpressionAssignment_8_2()); }
	(rule__Insert__WhereExpressionAssignment_8_2)
	{ after(grammarAccess.getInsertAccess().getWhereExpressionAssignment_8_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group_8__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group_8__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group_8__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getRightParenthesisKeyword_8_3()); }
	')'
	{ after(grammarAccess.getInsertAccess().getRightParenthesisKeyword_8_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rename__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rename__Group__0__Impl
	rule__Rename__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rename__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameAccess().getRENAMEKeyword_0()); }
	'RENAME'
	{ after(grammarAccess.getRenameAccess().getRENAMEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rename__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rename__Group__1__Impl
	rule__Rename__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rename__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getRenameAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rename__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rename__Group__2__Impl
	rule__Rename__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Rename__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameAccess().getCallAssignment_2()); }
	(rule__Rename__CallAssignment_2)
	{ after(grammarAccess.getRenameAccess().getCallAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rename__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rename__Group__3__Impl
	rule__Rename__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Rename__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getRenameAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rename__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rename__Group__4__Impl
	rule__Rename__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Rename__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameAccess().getONKeyword_4()); }
	'ON'
	{ after(grammarAccess.getRenameAccess().getONKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rename__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rename__Group__5__Impl
	rule__Rename__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Rename__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameAccess().getLeftParenthesisKeyword_5()); }
	'('
	{ after(grammarAccess.getRenameAccess().getLeftParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rename__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rename__Group__6__Impl
	rule__Rename__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Rename__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameAccess().getFieldsAssignment_6()); }
	(rule__Rename__FieldsAssignment_6)
	{ after(grammarAccess.getRenameAccess().getFieldsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rename__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rename__Group__7__Impl
	rule__Rename__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Rename__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameAccess().getGroup_7()); }
	(rule__Rename__Group_7__0)*
	{ after(grammarAccess.getRenameAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rename__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rename__Group__8__Impl
	rule__Rename__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Rename__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameAccess().getRightParenthesisKeyword_8()); }
	')'
	{ after(grammarAccess.getRenameAccess().getRightParenthesisKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rename__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rename__Group__9__Impl
	rule__Rename__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Rename__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameAccess().getTOKeyword_9()); }
	'TO'
	{ after(grammarAccess.getRenameAccess().getTOKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rename__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rename__Group__10__Impl
	rule__Rename__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Rename__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameAccess().getLeftParenthesisKeyword_10()); }
	'('
	{ after(grammarAccess.getRenameAccess().getLeftParenthesisKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rename__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rename__Group__11__Impl
	rule__Rename__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Rename__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameAccess().getNfieldsAssignment_11()); }
	(rule__Rename__NfieldsAssignment_11)
	{ after(grammarAccess.getRenameAccess().getNfieldsAssignment_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rename__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rename__Group__12__Impl
	rule__Rename__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Rename__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameAccess().getGroup_12()); }
	(rule__Rename__Group_12__0)*
	{ after(grammarAccess.getRenameAccess().getGroup_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rename__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rename__Group__13__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rename__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameAccess().getRightParenthesisKeyword_13()); }
	')'
	{ after(grammarAccess.getRenameAccess().getRightParenthesisKeyword_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rename__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rename__Group_7__0__Impl
	rule__Rename__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rename__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameAccess().getCommaKeyword_7_0()); }
	','
	{ after(grammarAccess.getRenameAccess().getCommaKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rename__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rename__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rename__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameAccess().getFieldsAssignment_7_1()); }
	(rule__Rename__FieldsAssignment_7_1)
	{ after(grammarAccess.getRenameAccess().getFieldsAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rename__Group_12__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rename__Group_12__0__Impl
	rule__Rename__Group_12__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rename__Group_12__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameAccess().getCommaKeyword_12_0()); }
	','
	{ after(grammarAccess.getRenameAccess().getCommaKeyword_12_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rename__Group_12__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rename__Group_12__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rename__Group_12__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameAccess().getNfieldsAssignment_12_1()); }
	(rule__Rename__NfieldsAssignment_12_1)
	{ after(grammarAccess.getRenameAccess().getNfieldsAssignment_12_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Delete__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group__0__Impl
	rule__Delete__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getDELETEKeyword_0()); }
	'DELETE'
	{ after(grammarAccess.getDeleteAccess().getDELETEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group__1__Impl
	rule__Delete__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getDeleteAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group__2__Impl
	rule__Delete__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getAlternatives_2()); }
	(rule__Delete__Alternatives_2)
	{ after(grammarAccess.getDeleteAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group__3__Impl
	rule__Delete__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getDeleteAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group__4__Impl
	rule__Delete__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getFROMKeyword_4()); }
	'FROM'
	{ after(grammarAccess.getDeleteAccess().getFROMKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group__5__Impl
	rule__Delete__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getLeftParenthesisKeyword_5()); }
	'('
	{ after(grammarAccess.getDeleteAccess().getLeftParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group__6__Impl
	rule__Delete__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getFromExpressionAssignment_6()); }
	(rule__Delete__FromExpressionAssignment_6)
	{ after(grammarAccess.getDeleteAccess().getFromExpressionAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group__7__Impl
	rule__Delete__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getDeleteAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getGroup_8()); }
	(rule__Delete__Group_8__0)?
	{ after(grammarAccess.getDeleteAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Delete__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group_2_1__0__Impl
	rule__Delete__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getFieldsAssignment_2_1_0()); }
	(rule__Delete__FieldsAssignment_2_1_0)
	{ after(grammarAccess.getDeleteAccess().getFieldsAssignment_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getGroup_2_1_1()); }
	(rule__Delete__Group_2_1_1__0)*
	{ after(grammarAccess.getDeleteAccess().getGroup_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Delete__Group_2_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group_2_1_1__0__Impl
	rule__Delete__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group_2_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getCommaKeyword_2_1_1_0()); }
	','
	{ after(grammarAccess.getDeleteAccess().getCommaKeyword_2_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group_2_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group_2_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getFieldsAssignment_2_1_1_1()); }
	(rule__Delete__FieldsAssignment_2_1_1_1)
	{ after(grammarAccess.getDeleteAccess().getFieldsAssignment_2_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Delete__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group_8__0__Impl
	rule__Delete__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getWHEREKeyword_8_0()); }
	('WHERE')
	{ after(grammarAccess.getDeleteAccess().getWHEREKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group_8__1__Impl
	rule__Delete__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getLeftParenthesisKeyword_8_1()); }
	'('
	{ after(grammarAccess.getDeleteAccess().getLeftParenthesisKeyword_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group_8__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group_8__2__Impl
	rule__Delete__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group_8__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getWhereExpressionAssignment_8_2()); }
	(rule__Delete__WhereExpressionAssignment_8_2)
	{ after(grammarAccess.getDeleteAccess().getWhereExpressionAssignment_8_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group_8__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group_8__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group_8__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getRightParenthesisKeyword_8_3()); }
	')'
	{ after(grammarAccess.getDeleteAccess().getRightParenthesisKeyword_8_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Remove__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Remove__Group__0__Impl
	rule__Remove__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveAccess().getREMOVEKeyword_0()); }
	'REMOVE'
	{ after(grammarAccess.getRemoveAccess().getREMOVEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Remove__Group__1__Impl
	rule__Remove__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getRemoveAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Remove__Group__2__Impl
	rule__Remove__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveAccess().getValueAssignment_2()); }
	(rule__Remove__ValueAssignment_2)
	{ after(grammarAccess.getRemoveAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Remove__Group__3__Impl
	rule__Remove__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getRemoveAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Remove__Group__4__Impl
	rule__Remove__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveAccess().getINKeyword_4()); }
	'IN'
	{ after(grammarAccess.getRemoveAccess().getINKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Remove__Group__5__Impl
	rule__Remove__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveAccess().getLeftParenthesisKeyword_5()); }
	'('
	{ after(grammarAccess.getRemoveAccess().getLeftParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Remove__Group__6__Impl
	rule__Remove__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveAccess().getVariableAssignment_6()); }
	(rule__Remove__VariableAssignment_6)
	{ after(grammarAccess.getRemoveAccess().getVariableAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Remove__Group__7__Impl
	rule__Remove__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getRemoveAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Remove__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveAccess().getGroup_8()); }
	(rule__Remove__Group_8__0)?
	{ after(grammarAccess.getRemoveAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Remove__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Remove__Group_8__0__Impl
	rule__Remove__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveAccess().getLeftParenthesisKeyword_8_0()); }
	'('
	{ after(grammarAccess.getRemoveAccess().getLeftParenthesisKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Remove__Group_8__1__Impl
	rule__Remove__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveAccess().getWHEREKeyword_8_1()); }
	'WHERE'
	{ after(grammarAccess.getRemoveAccess().getWHEREKeyword_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group_8__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Remove__Group_8__2__Impl
	rule__Remove__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group_8__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveAccess().getWhereExpressionAssignment_8_2()); }
	(rule__Remove__WhereExpressionAssignment_8_2)
	{ after(grammarAccess.getRemoveAccess().getWhereExpressionAssignment_8_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group_8__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Remove__Group_8__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group_8__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveAccess().getRightParenthesisKeyword_8_3()); }
	')'
	{ after(grammarAccess.getRemoveAccess().getRightParenthesisKeyword_8_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Array__Group__0__Impl
	rule__Array__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayAccess().getArrayAction_0()); }
	()
	{ after(grammarAccess.getArrayAccess().getArrayAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Array__Group__1__Impl
	rule__Array__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getArrayAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Array__Group__2__Impl
	rule__Array__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayAccess().getGroup_2()); }
	(rule__Array__Group_2__0)?
	{ after(grammarAccess.getArrayAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Array__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getArrayAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Array__Group_2__0__Impl
	rule__Array__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayAccess().getValuesAssignment_2_0()); }
	(rule__Array__ValuesAssignment_2_0)
	{ after(grammarAccess.getArrayAccess().getValuesAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Array__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayAccess().getGroup_2_1()); }
	(rule__Array__Group_2_1__0)*
	{ after(grammarAccess.getArrayAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Array__Group_2_1__0__Impl
	rule__Array__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getArrayAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Array__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayAccess().getValuesAssignment_2_1_1()); }
	(rule__Array__ValuesAssignment_2_1_1)
	{ after(grammarAccess.getArrayAccess().getValuesAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JSonObject__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSonObject__Group__0__Impl
	rule__JSonObject__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonObject__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSonObjectAccess().getJSonObjectAction_0()); }
	()
	{ after(grammarAccess.getJSonObjectAccess().getJSonObjectAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonObject__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSonObject__Group__1__Impl
	rule__JSonObject__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonObject__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSonObjectAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getJSonObjectAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonObject__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSonObject__Group__2__Impl
	rule__JSonObject__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonObject__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSonObjectAccess().getGroup_2()); }
	(rule__JSonObject__Group_2__0)?
	{ after(grammarAccess.getJSonObjectAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonObject__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSonObject__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonObject__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSonObjectAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getJSonObjectAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JSonObject__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSonObject__Group_2__0__Impl
	rule__JSonObject__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonObject__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSonObjectAccess().getFieldsAssignment_2_0()); }
	(rule__JSonObject__FieldsAssignment_2_0)
	{ after(grammarAccess.getJSonObjectAccess().getFieldsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonObject__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSonObject__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonObject__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSonObjectAccess().getGroup_2_1()); }
	(rule__JSonObject__Group_2_1__0)*
	{ after(grammarAccess.getJSonObjectAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JSonObject__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSonObject__Group_2_1__0__Impl
	rule__JSonObject__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonObject__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSonObjectAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getJSonObjectAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonObject__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSonObject__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonObject__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSonObjectAccess().getFieldsAssignment_2_1_1()); }
	(rule__JSonObject__FieldsAssignment_2_1_1)
	{ after(grammarAccess.getJSonObjectAccess().getFieldsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__0__Impl
	rule__Field__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getKeyAssignment_0()); }
	(rule__Field__KeyAssignment_0)
	{ after(grammarAccess.getFieldAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__1__Impl
	rule__Field__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getFieldAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getValueAssignment_2()); }
	(rule__Field__ValueAssignment_2)
	{ after(grammarAccess.getFieldAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__StmtsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getStmtsSimpleStatementParserRuleCall_0()); }
		ruleSimpleStatement
		{ after(grammarAccess.getModelAccess().getStmtsSimpleStatementParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__LeftHandSideAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getLeftHandSideVariableCallParserRuleCall_0_0()); }
		ruleVariableCall
		{ after(grammarAccess.getAssignmentAccess().getLeftHandSideVariableCallParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__RightHandSideAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getRightHandSideExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getAssignmentAccess().getRightHandSideExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl1__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLvl1Access().getRightExpressionLvl2ParserRuleCall_1_2_0()); }
		ruleExpressionLvl2
		{ after(grammarAccess.getExpressionLvl1Access().getRightExpressionLvl2ParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl2__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLvl2Access().getRightExpressionLvl3ParserRuleCall_1_2_0()); }
		ruleExpressionLvl3
		{ after(grammarAccess.getExpressionLvl2Access().getRightExpressionLvl3ParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl3__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLvl3Access().getRightExpressionLvl4ParserRuleCall_1_0_2_0()); }
		ruleExpressionLvl4
		{ after(grammarAccess.getExpressionLvl3Access().getRightExpressionLvl4ParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl3__RightAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLvl3Access().getRightExpressionLvl4ParserRuleCall_1_1_2_0()); }
		ruleExpressionLvl4
		{ after(grammarAccess.getExpressionLvl3Access().getRightExpressionLvl4ParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl4__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLvl4Access().getRightExpressionLvl5ParserRuleCall_1_0_2_0()); }
		ruleExpressionLvl5
		{ after(grammarAccess.getExpressionLvl4Access().getRightExpressionLvl5ParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl4__RightAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLvl4Access().getRightExpressionLvl5ParserRuleCall_1_1_2_0()); }
		ruleExpressionLvl5
		{ after(grammarAccess.getExpressionLvl4Access().getRightExpressionLvl5ParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl4__RightAssignment_1_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLvl4Access().getRightExpressionLvl5ParserRuleCall_1_2_2_0()); }
		ruleExpressionLvl5
		{ after(grammarAccess.getExpressionLvl4Access().getRightExpressionLvl5ParserRuleCall_1_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl4__RightAssignment_1_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLvl4Access().getRightExpressionLvl5ParserRuleCall_1_3_2_0()); }
		ruleExpressionLvl5
		{ after(grammarAccess.getExpressionLvl4Access().getRightExpressionLvl5ParserRuleCall_1_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl5__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLvl5Access().getRightExpressionLvl6ParserRuleCall_1_0_2_0()); }
		ruleExpressionLvl6
		{ after(grammarAccess.getExpressionLvl5Access().getRightExpressionLvl6ParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl5__RightAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLvl5Access().getRightExpressionLvl6ParserRuleCall_1_1_2_0()); }
		ruleExpressionLvl6
		{ after(grammarAccess.getExpressionLvl5Access().getRightExpressionLvl6ParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl6__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLvl6Access().getRightExpressionLvl7ParserRuleCall_1_0_2_0()); }
		ruleExpressionLvl7
		{ after(grammarAccess.getExpressionLvl6Access().getRightExpressionLvl7ParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl6__RightAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLvl6Access().getRightExpressionLvl7ParserRuleCall_1_1_2_0()); }
		ruleExpressionLvl7
		{ after(grammarAccess.getExpressionLvl6Access().getRightExpressionLvl7ParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLvl6__RightAssignment_1_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLvl6Access().getRightExpressionLvl7ParserRuleCall_1_2_2_0()); }
		ruleExpressionLvl7
		{ after(grammarAccess.getExpressionLvl6Access().getRightExpressionLvl7ParserRuleCall_1_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryMinusExpression__SubAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryMinusExpressionAccess().getSubExpressionLvl7ParserRuleCall_1_0()); }
		ruleExpressionLvl7
		{ after(grammarAccess.getUnaryMinusExpressionAccess().getSubExpressionLvl7ParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryPlusExpression__SubAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryPlusExpressionAccess().getSubExpressionLvl7ParserRuleCall_1_0()); }
		ruleExpressionLvl7
		{ after(grammarAccess.getUnaryPlusExpressionAccess().getSubExpressionLvl7ParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalNegationExpression__SubAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalNegationExpressionAccess().getSubExpressionLvl8ParserRuleCall_1_0()); }
		ruleExpressionLvl8
		{ after(grammarAccess.getLogicalNegationExpressionAccess().getSubExpressionLvl8ParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BracketExpression__SubAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBracketExpressionAccess().getSubExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getBracketExpressionAccess().getSubExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableCall__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableCallAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableCallAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableCall__CallerAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableCallAccess().getCallerAuxiliarCallerParserRuleCall_1_0()); }
		ruleAuxiliarCaller
		{ after(grammarAccess.getVariableCallAccess().getCallerAuxiliarCallerParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldCaller__KeyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldCallerAccess().getKeySTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getFieldCallerAccess().getKeySTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayCaller__IndexAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayCallerAccess().getIndexINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getArrayCallerAccess().getIndexINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayCaller__IndexAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayCallerAccess().getIndexINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getArrayCallerAccess().getIndexINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__FileNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoadAccess().getFileNameExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getLoadAccess().getFileNameExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStoreAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getStoreAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__FileNameAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStoreAccess().getFileNameExpressionParserRuleCall_6_0()); }
		ruleExpression
		{ after(grammarAccess.getStoreAccess().getFileNameExpressionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExportAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getExportAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__FileNameAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExportAccess().getFileNameExpressionParserRuleCall_6_0()); }
		ruleExpression
		{ after(grammarAccess.getExportAccess().getFileNameExpressionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcCallAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getProcCallAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Depth__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDepthAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getDepthAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldInfo__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldInfoAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getFieldInfoAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__KeysAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainsAccess().getKeysExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getContainsAccess().getKeysExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__KeysAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainsAccess().getKeysExpressionParserRuleCall_3_1_0()); }
		ruleExpression
		{ after(grammarAccess.getContainsAccess().getKeysExpressionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__RightAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainsAccess().getRightExpressionParserRuleCall_7_0()); }
		ruleExpression
		{ after(grammarAccess.getContainsAccess().getRightExpressionParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__FieldsAssignment_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getFieldsExpressionParserRuleCall_2_1_0_0()); }
		ruleExpression
		{ after(grammarAccess.getSelectAccess().getFieldsExpressionParserRuleCall_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__FieldsAssignment_2_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getFieldsExpressionParserRuleCall_2_1_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getSelectAccess().getFieldsExpressionParserRuleCall_2_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__FromExpressionAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getFromExpressionExpressionParserRuleCall_6_0()); }
		ruleExpression
		{ after(grammarAccess.getSelectAccess().getFromExpressionExpressionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__WhereExpressionAssignment_8_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getWhereExpressionExpressionParserRuleCall_8_2_0()); }
		ruleExpression
		{ after(grammarAccess.getSelectAccess().getWhereExpressionExpressionParserRuleCall_8_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__ExpressionsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConcatAccess().getExpressionsExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getConcatAccess().getExpressionsExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__ExpressionsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConcatAccess().getExpressionsExpressionParserRuleCall_3_1_0()); }
		ruleExpression
		{ after(grammarAccess.getConcatAccess().getExpressionsExpressionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getSumAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__FieldsAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumAccess().getFieldsExpressionParserRuleCall_4_2_0()); }
		ruleExpression
		{ after(grammarAccess.getSumAccess().getFieldsExpressionParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__FieldsAssignment_4_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumAccess().getFieldsExpressionParserRuleCall_4_3_1_0()); }
		ruleExpression
		{ after(grammarAccess.getSumAccess().getFieldsExpressionParserRuleCall_4_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__WhereExpressionAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumAccess().getWhereExpressionExpressionParserRuleCall_5_2_0()); }
		ruleExpression
		{ after(grammarAccess.getSumAccess().getWhereExpressionExpressionParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProductAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getProductAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__FieldsAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProductAccess().getFieldsExpressionParserRuleCall_4_2_0()); }
		ruleExpression
		{ after(grammarAccess.getProductAccess().getFieldsExpressionParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__FieldsAssignment_4_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProductAccess().getFieldsExpressionParserRuleCall_4_3_1_0()); }
		ruleExpression
		{ after(grammarAccess.getProductAccess().getFieldsExpressionParserRuleCall_4_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__WhereExpressionAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProductAccess().getWhereExpressionExpressionParserRuleCall_5_2_0()); }
		ruleExpression
		{ after(grammarAccess.getProductAccess().getWhereExpressionExpressionParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mean__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMeanAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getMeanAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mean__FieldsAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMeanAccess().getFieldsExpressionParserRuleCall_4_2_0()); }
		ruleExpression
		{ after(grammarAccess.getMeanAccess().getFieldsExpressionParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mean__FieldsAssignment_4_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMeanAccess().getFieldsExpressionParserRuleCall_4_3_1_0()); }
		ruleExpression
		{ after(grammarAccess.getMeanAccess().getFieldsExpressionParserRuleCall_4_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mean__WhereExpressionAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMeanAccess().getWhereExpressionExpressionParserRuleCall_5_2_0()); }
		ruleExpression
		{ after(grammarAccess.getMeanAccess().getWhereExpressionExpressionParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getAddAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__VariableAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddAccess().getVariableExpressionParserRuleCall_6_0()); }
		ruleExpression
		{ after(grammarAccess.getAddAccess().getVariableExpressionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__FieldsAssignment_8_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddAccess().getFieldsExpressionParserRuleCall_8_2_0()); }
		ruleExpression
		{ after(grammarAccess.getAddAccess().getFieldsExpressionParserRuleCall_8_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__FieldsAssignment_8_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddAccess().getFieldsExpressionParserRuleCall_8_3_1_0()); }
		ruleExpression
		{ after(grammarAccess.getAddAccess().getFieldsExpressionParserRuleCall_8_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInsertAccess().getValueExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getInsertAccess().getValueExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__VariableAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInsertAccess().getVariableExpressionParserRuleCall_6_0()); }
		ruleExpression
		{ after(grammarAccess.getInsertAccess().getVariableExpressionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__WhereExpressionAssignment_8_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInsertAccess().getWhereExpressionExpressionParserRuleCall_8_2_0()); }
		ruleExpression
		{ after(grammarAccess.getInsertAccess().getWhereExpressionExpressionParserRuleCall_8_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rename__CallAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRenameAccess().getCallVariableCallParserRuleCall_2_0()); }
		ruleVariableCall
		{ after(grammarAccess.getRenameAccess().getCallVariableCallParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rename__FieldsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRenameAccess().getFieldsExpressionParserRuleCall_6_0()); }
		ruleExpression
		{ after(grammarAccess.getRenameAccess().getFieldsExpressionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rename__FieldsAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRenameAccess().getFieldsExpressionParserRuleCall_7_1_0()); }
		ruleExpression
		{ after(grammarAccess.getRenameAccess().getFieldsExpressionParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rename__NfieldsAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRenameAccess().getNfieldsExpressionParserRuleCall_11_0()); }
		ruleExpression
		{ after(grammarAccess.getRenameAccess().getNfieldsExpressionParserRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rename__NfieldsAssignment_12_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRenameAccess().getNfieldsExpressionParserRuleCall_12_1_0()); }
		ruleExpression
		{ after(grammarAccess.getRenameAccess().getNfieldsExpressionParserRuleCall_12_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__FieldsAssignment_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeleteAccess().getFieldsExpressionParserRuleCall_2_1_0_0()); }
		ruleExpression
		{ after(grammarAccess.getDeleteAccess().getFieldsExpressionParserRuleCall_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__FieldsAssignment_2_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeleteAccess().getFieldsExpressionParserRuleCall_2_1_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getDeleteAccess().getFieldsExpressionParserRuleCall_2_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__FromExpressionAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeleteAccess().getFromExpressionExpressionParserRuleCall_6_0()); }
		ruleExpression
		{ after(grammarAccess.getDeleteAccess().getFromExpressionExpressionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__WhereExpressionAssignment_8_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeleteAccess().getWhereExpressionExpressionParserRuleCall_8_2_0()); }
		ruleExpression
		{ after(grammarAccess.getDeleteAccess().getWhereExpressionExpressionParserRuleCall_8_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRemoveAccess().getValueExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getRemoveAccess().getValueExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__VariableAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRemoveAccess().getVariableExpressionParserRuleCall_6_0()); }
		ruleExpression
		{ after(grammarAccess.getRemoveAccess().getVariableExpressionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__WhereExpressionAssignment_8_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRemoveAccess().getWhereExpressionExpressionParserRuleCall_8_2_0()); }
		ruleExpression
		{ after(grammarAccess.getRemoveAccess().getWhereExpressionExpressionParserRuleCall_8_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__StrAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveAccess().getStrSTRINGTerminalRuleCall_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getPrimitiveAccess().getStrSTRINGTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__NumAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveAccess().getNumNUMBERParserRuleCall_1_0()); }
		ruleNUMBER
		{ after(grammarAccess.getPrimitiveAccess().getNumNUMBERParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__BoolAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveAccess().getBoolBOOLTerminalRuleCall_2_0()); }
		RULE_BOOL
		{ after(grammarAccess.getPrimitiveAccess().getBoolBOOLTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__NilAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveAccess().getNilNULLTerminalRuleCall_3_0()); }
		RULE_NULL
		{ after(grammarAccess.getPrimitiveAccess().getNilNULLTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__ValuesAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayAccess().getValuesExpressionParserRuleCall_2_0_0()); }
		ruleExpression
		{ after(grammarAccess.getArrayAccess().getValuesExpressionParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__ValuesAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayAccess().getValuesExpressionParserRuleCall_2_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getArrayAccess().getValuesExpressionParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonObject__FieldsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJSonObjectAccess().getFieldsFieldParserRuleCall_2_0_0()); }
		ruleField
		{ after(grammarAccess.getJSonObjectAccess().getFieldsFieldParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonObject__FieldsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJSonObjectAccess().getFieldsFieldParserRuleCall_2_1_1_0()); }
		ruleField
		{ after(grammarAccess.getJSonObjectAccess().getFieldsFieldParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getKeyExpressionParserRuleCall_0_0()); }
		ruleExpression
		{ after(grammarAccess.getFieldAccess().getKeyExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getValueExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getFieldAccess().getValueExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_NULL : 'null';

RULE_BOOL : ('true'|'false');

RULE_DOUBLE : ('0'..'9')+ '.' ('0'..'9')* 'e' ('0'..'9')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
