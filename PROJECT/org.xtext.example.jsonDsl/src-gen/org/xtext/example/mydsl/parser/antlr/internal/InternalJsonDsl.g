/*
 * generated by Xtext 2.23.0
 */
grammar InternalJsonDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.JsonDslGrammarAccess;

}

@parser::members {

 	private JsonDslGrammarAccess grammarAccess;

    public InternalJsonDslParser(TokenStream input, JsonDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected JsonDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getStmtsSimpleStatementParserRuleCall_0());
			}
			lv_stmts_0_0=ruleSimpleStatement
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"stmts",
					lv_stmts_0_0,
					"org.xtext.example.mydsl.JsonDsl.SimpleStatement");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleSimpleStatement
entryRuleSimpleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleStatementRule()); }
	iv_ruleSimpleStatement=ruleSimpleStatement
	{ $current=$iv_ruleSimpleStatement.current; }
	EOF;

// Rule SimpleStatement
ruleSimpleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getSimpleStatementAccess().getAssignmentParserRuleCall_0_0());
			}
			this_Assignment_0=ruleAssignment
			{
				$current = $this_Assignment_0.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getSimpleStatementAccess().getExpressionParserRuleCall_0_1());
			}
			this_Expression_1=ruleExpression
			{
				$current = $this_Expression_1.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getSimpleStatementAccess().getProcCallParserRuleCall_0_2());
			}
			this_ProcCall_2=ruleProcCall
			{
				$current = $this_ProcCall_2.current;
				afterParserOrEnumRuleCall();
			}
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getSimpleStatementAccess().getSemicolonKeyword_1());
		}
	)
;

// Entry rule entryRuleAssignment
entryRuleAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssignmentRule()); }
	iv_ruleAssignment=ruleAssignment
	{ $current=$iv_ruleAssignment.current; }
	EOF;

// Rule Assignment
ruleAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignmentAccess().getLeftHandSideVariableCallParserRuleCall_0_0());
				}
				lv_leftHandSide_0_0=ruleVariableCall
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignmentRule());
					}
					set(
						$current,
						"leftHandSide",
						lv_leftHandSide_0_0,
						"org.xtext.example.mydsl.JsonDsl.VariableCall");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignmentAccess().getRightHandSideExpressionParserRuleCall_2_0());
				}
				lv_rightHandSide_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignmentRule());
					}
					set(
						$current,
						"rightHandSide",
						lv_rightHandSide_2_0,
						"org.xtext.example.mydsl.JsonDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getExpressionAccess().getExpressionLvl1ParserRuleCall());
	}
	this_ExpressionLvl1_0=ruleExpressionLvl1
	{
		$current = $this_ExpressionLvl1_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleExpressionLvl1
entryRuleExpressionLvl1 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionLvl1Rule()); }
	iv_ruleExpressionLvl1=ruleExpressionLvl1
	{ $current=$iv_ruleExpressionLvl1.current; }
	EOF;

// Rule ExpressionLvl1
ruleExpressionLvl1 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionLvl1Access().getExpressionLvl2ParserRuleCall_0());
		}
		this_ExpressionLvl2_0=ruleExpressionLvl2
		{
			$current = $this_ExpressionLvl2_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getExpressionLvl1Access().getDisjunctionExpressionLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='OR'
			{
				newLeafNode(otherlv_2, grammarAccess.getExpressionLvl1Access().getORKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionLvl1Access().getRightExpressionLvl2ParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleExpressionLvl2
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionLvl1Rule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.xtext.example.mydsl.JsonDsl.ExpressionLvl2");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleExpressionLvl2
entryRuleExpressionLvl2 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionLvl2Rule()); }
	iv_ruleExpressionLvl2=ruleExpressionLvl2
	{ $current=$iv_ruleExpressionLvl2.current; }
	EOF;

// Rule ExpressionLvl2
ruleExpressionLvl2 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionLvl2Access().getExpressionLvl3ParserRuleCall_0());
		}
		this_ExpressionLvl3_0=ruleExpressionLvl3
		{
			$current = $this_ExpressionLvl3_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getExpressionLvl2Access().getConjunctionExpressionLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='AND'
			{
				newLeafNode(otherlv_2, grammarAccess.getExpressionLvl2Access().getANDKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionLvl2Access().getRightExpressionLvl3ParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleExpressionLvl3
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionLvl2Rule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.xtext.example.mydsl.JsonDsl.ExpressionLvl3");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleExpressionLvl3
entryRuleExpressionLvl3 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionLvl3Rule()); }
	iv_ruleExpressionLvl3=ruleExpressionLvl3
	{ $current=$iv_ruleExpressionLvl3.current; }
	EOF;

// Rule ExpressionLvl3
ruleExpressionLvl3 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionLvl3Access().getExpressionLvl4ParserRuleCall_0());
		}
		this_ExpressionLvl4_0=ruleExpressionLvl4
		{
			$current = $this_ExpressionLvl4_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpressionLvl3Access().getEqualityExpressionLeftAction_1_0_0(),
							$current);
					}
				)
				otherlv_2='=='
				{
					newLeafNode(otherlv_2, grammarAccess.getExpressionLvl3Access().getEqualsSignEqualsSignKeyword_1_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpressionLvl3Access().getRightExpressionLvl4ParserRuleCall_1_0_2_0());
						}
						lv_right_3_0=ruleExpressionLvl4
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpressionLvl3Rule());
							}
							set(
								$current,
								"right",
								lv_right_3_0,
								"org.xtext.example.mydsl.JsonDsl.ExpressionLvl4");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpressionLvl3Access().getInequalityExpressionLeftAction_1_1_0(),
							$current);
					}
				)
				otherlv_5='!='
				{
					newLeafNode(otherlv_5, grammarAccess.getExpressionLvl3Access().getExclamationMarkEqualsSignKeyword_1_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpressionLvl3Access().getRightExpressionLvl4ParserRuleCall_1_1_2_0());
						}
						lv_right_6_0=ruleExpressionLvl4
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpressionLvl3Rule());
							}
							set(
								$current,
								"right",
								lv_right_6_0,
								"org.xtext.example.mydsl.JsonDsl.ExpressionLvl4");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleExpressionLvl4
entryRuleExpressionLvl4 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionLvl4Rule()); }
	iv_ruleExpressionLvl4=ruleExpressionLvl4
	{ $current=$iv_ruleExpressionLvl4.current; }
	EOF;

// Rule ExpressionLvl4
ruleExpressionLvl4 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionLvl4Access().getExpressionLvl5ParserRuleCall_0());
		}
		this_ExpressionLvl5_0=ruleExpressionLvl5
		{
			$current = $this_ExpressionLvl5_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpressionLvl4Access().getSuperiExpressionLeftAction_1_0_0(),
							$current);
					}
				)
				otherlv_2='>'
				{
					newLeafNode(otherlv_2, grammarAccess.getExpressionLvl4Access().getGreaterThanSignKeyword_1_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpressionLvl4Access().getRightExpressionLvl5ParserRuleCall_1_0_2_0());
						}
						lv_right_3_0=ruleExpressionLvl5
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpressionLvl4Rule());
							}
							set(
								$current,
								"right",
								lv_right_3_0,
								"org.xtext.example.mydsl.JsonDsl.ExpressionLvl5");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpressionLvl4Access().getSuperiorOrEqualExpressionLeftAction_1_1_0(),
							$current);
					}
				)
				otherlv_5='>='
				{
					newLeafNode(otherlv_5, grammarAccess.getExpressionLvl4Access().getGreaterThanSignEqualsSignKeyword_1_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpressionLvl4Access().getRightExpressionLvl5ParserRuleCall_1_1_2_0());
						}
						lv_right_6_0=ruleExpressionLvl5
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpressionLvl4Rule());
							}
							set(
								$current,
								"right",
								lv_right_6_0,
								"org.xtext.example.mydsl.JsonDsl.ExpressionLvl5");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpressionLvl4Access().getInferiExpressionLeftAction_1_2_0(),
							$current);
					}
				)
				otherlv_8='<'
				{
					newLeafNode(otherlv_8, grammarAccess.getExpressionLvl4Access().getLessThanSignKeyword_1_2_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpressionLvl4Access().getRightExpressionLvl5ParserRuleCall_1_2_2_0());
						}
						lv_right_9_0=ruleExpressionLvl5
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpressionLvl4Rule());
							}
							set(
								$current,
								"right",
								lv_right_9_0,
								"org.xtext.example.mydsl.JsonDsl.ExpressionLvl5");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpressionLvl4Access().getInferiorOrEqualExpressionLeftAction_1_3_0(),
							$current);
					}
				)
				otherlv_11='<='
				{
					newLeafNode(otherlv_11, grammarAccess.getExpressionLvl4Access().getLessThanSignEqualsSignKeyword_1_3_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpressionLvl4Access().getRightExpressionLvl5ParserRuleCall_1_3_2_0());
						}
						lv_right_12_0=ruleExpressionLvl5
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpressionLvl4Rule());
							}
							set(
								$current,
								"right",
								lv_right_12_0,
								"org.xtext.example.mydsl.JsonDsl.ExpressionLvl5");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleExpressionLvl5
entryRuleExpressionLvl5 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionLvl5Rule()); }
	iv_ruleExpressionLvl5=ruleExpressionLvl5
	{ $current=$iv_ruleExpressionLvl5.current; }
	EOF;

// Rule ExpressionLvl5
ruleExpressionLvl5 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionLvl5Access().getExpressionLvl6ParserRuleCall_0());
		}
		this_ExpressionLvl6_0=ruleExpressionLvl6
		{
			$current = $this_ExpressionLvl6_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpressionLvl5Access().getAdditionExpressionLeftAction_1_0_0(),
							$current);
					}
				)
				otherlv_2='+'
				{
					newLeafNode(otherlv_2, grammarAccess.getExpressionLvl5Access().getPlusSignKeyword_1_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpressionLvl5Access().getRightExpressionLvl6ParserRuleCall_1_0_2_0());
						}
						lv_right_3_0=ruleExpressionLvl6
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpressionLvl5Rule());
							}
							set(
								$current,
								"right",
								lv_right_3_0,
								"org.xtext.example.mydsl.JsonDsl.ExpressionLvl6");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpressionLvl5Access().getSubstractionExpressionLeftAction_1_1_0(),
							$current);
					}
				)
				otherlv_5='-'
				{
					newLeafNode(otherlv_5, grammarAccess.getExpressionLvl5Access().getHyphenMinusKeyword_1_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpressionLvl5Access().getRightExpressionLvl6ParserRuleCall_1_1_2_0());
						}
						lv_right_6_0=ruleExpressionLvl6
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpressionLvl5Rule());
							}
							set(
								$current,
								"right",
								lv_right_6_0,
								"org.xtext.example.mydsl.JsonDsl.ExpressionLvl6");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleExpressionLvl6
entryRuleExpressionLvl6 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionLvl6Rule()); }
	iv_ruleExpressionLvl6=ruleExpressionLvl6
	{ $current=$iv_ruleExpressionLvl6.current; }
	EOF;

// Rule ExpressionLvl6
ruleExpressionLvl6 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionLvl6Access().getExpressionLvl7ParserRuleCall_0());
		}
		this_ExpressionLvl7_0=ruleExpressionLvl7
		{
			$current = $this_ExpressionLvl7_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpressionLvl6Access().getMultiplicationExpressionLeftAction_1_0_0(),
							$current);
					}
				)
				otherlv_2='*'
				{
					newLeafNode(otherlv_2, grammarAccess.getExpressionLvl6Access().getAsteriskKeyword_1_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpressionLvl6Access().getRightExpressionLvl7ParserRuleCall_1_0_2_0());
						}
						lv_right_3_0=ruleExpressionLvl7
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpressionLvl6Rule());
							}
							set(
								$current,
								"right",
								lv_right_3_0,
								"org.xtext.example.mydsl.JsonDsl.ExpressionLvl7");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpressionLvl6Access().getDivisionExpressionLeftAction_1_1_0(),
							$current);
					}
				)
				otherlv_5='/'
				{
					newLeafNode(otherlv_5, grammarAccess.getExpressionLvl6Access().getSolidusKeyword_1_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpressionLvl6Access().getRightExpressionLvl7ParserRuleCall_1_1_2_0());
						}
						lv_right_6_0=ruleExpressionLvl7
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpressionLvl6Rule());
							}
							set(
								$current,
								"right",
								lv_right_6_0,
								"org.xtext.example.mydsl.JsonDsl.ExpressionLvl7");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpressionLvl6Access().getModuloExpressionLeftAction_1_2_0(),
							$current);
					}
				)
				otherlv_8='%'
				{
					newLeafNode(otherlv_8, grammarAccess.getExpressionLvl6Access().getPercentSignKeyword_1_2_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpressionLvl6Access().getRightExpressionLvl7ParserRuleCall_1_2_2_0());
						}
						lv_right_9_0=ruleExpressionLvl7
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpressionLvl6Rule());
							}
							set(
								$current,
								"right",
								lv_right_9_0,
								"org.xtext.example.mydsl.JsonDsl.ExpressionLvl7");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleExpressionLvl7
entryRuleExpressionLvl7 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionLvl7Rule()); }
	iv_ruleExpressionLvl7=ruleExpressionLvl7
	{ $current=$iv_ruleExpressionLvl7.current; }
	EOF;

// Rule ExpressionLvl7
ruleExpressionLvl7 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionLvl7Access().getUnaryMinusExpressionParserRuleCall_0());
		}
		this_UnaryMinusExpression_0=ruleUnaryMinusExpression
		{
			$current = $this_UnaryMinusExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionLvl7Access().getUnaryPlusExpressionParserRuleCall_1());
		}
		this_UnaryPlusExpression_1=ruleUnaryPlusExpression
		{
			$current = $this_UnaryPlusExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionLvl7Access().getExpressionLvl8ParserRuleCall_2());
		}
		this_ExpressionLvl8_2=ruleExpressionLvl8
		{
			$current = $this_ExpressionLvl8_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleUnaryMinusExpression
entryRuleUnaryMinusExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnaryMinusExpressionRule()); }
	iv_ruleUnaryMinusExpression=ruleUnaryMinusExpression
	{ $current=$iv_ruleUnaryMinusExpression.current; }
	EOF;

// Rule UnaryMinusExpression
ruleUnaryMinusExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='-'
		{
			newLeafNode(otherlv_0, grammarAccess.getUnaryMinusExpressionAccess().getHyphenMinusKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUnaryMinusExpressionAccess().getSubExpressionLvl7ParserRuleCall_1_0());
				}
				lv_sub_1_0=ruleExpressionLvl7
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnaryMinusExpressionRule());
					}
					set(
						$current,
						"sub",
						lv_sub_1_0,
						"org.xtext.example.mydsl.JsonDsl.ExpressionLvl7");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleUnaryPlusExpression
entryRuleUnaryPlusExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnaryPlusExpressionRule()); }
	iv_ruleUnaryPlusExpression=ruleUnaryPlusExpression
	{ $current=$iv_ruleUnaryPlusExpression.current; }
	EOF;

// Rule UnaryPlusExpression
ruleUnaryPlusExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='+'
		{
			newLeafNode(otherlv_0, grammarAccess.getUnaryPlusExpressionAccess().getPlusSignKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUnaryPlusExpressionAccess().getSubExpressionLvl7ParserRuleCall_1_0());
				}
				lv_sub_1_0=ruleExpressionLvl7
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnaryPlusExpressionRule());
					}
					set(
						$current,
						"sub",
						lv_sub_1_0,
						"org.xtext.example.mydsl.JsonDsl.ExpressionLvl7");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExpressionLvl8
entryRuleExpressionLvl8 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionLvl8Rule()); }
	iv_ruleExpressionLvl8=ruleExpressionLvl8
	{ $current=$iv_ruleExpressionLvl8.current; }
	EOF;

// Rule ExpressionLvl8
ruleExpressionLvl8 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionLvl8Access().getLogicalNegationExpressionParserRuleCall_0());
		}
		this_LogicalNegationExpression_0=ruleLogicalNegationExpression
		{
			$current = $this_LogicalNegationExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionLvl8Access().getPrimaryExpressionParserRuleCall_1());
		}
		this_PrimaryExpression_1=rulePrimaryExpression
		{
			$current = $this_PrimaryExpression_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLogicalNegationExpression
entryRuleLogicalNegationExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogicalNegationExpressionRule()); }
	iv_ruleLogicalNegationExpression=ruleLogicalNegationExpression
	{ $current=$iv_ruleLogicalNegationExpression.current; }
	EOF;

// Rule LogicalNegationExpression
ruleLogicalNegationExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='!'
		{
			newLeafNode(otherlv_0, grammarAccess.getLogicalNegationExpressionAccess().getExclamationMarkKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLogicalNegationExpressionAccess().getSubExpressionLvl8ParserRuleCall_1_0());
				}
				lv_sub_1_0=ruleExpressionLvl8
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLogicalNegationExpressionRule());
					}
					set(
						$current,
						"sub",
						lv_sub_1_0,
						"org.xtext.example.mydsl.JsonDsl.ExpressionLvl8");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExpressionRule()); }
	iv_rulePrimaryExpression=rulePrimaryExpression
	{ $current=$iv_rulePrimaryExpression.current; }
	EOF;

// Rule PrimaryExpression
rulePrimaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getVariableCallParserRuleCall_0());
		}
		this_VariableCall_0=ruleVariableCall
		{
			$current = $this_VariableCall_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getConstantParserRuleCall_1());
		}
		this_Constant_1=ruleConstant
		{
			$current = $this_Constant_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getFunctionCallParserRuleCall_2());
		}
		this_FunctionCall_2=ruleFunctionCall
		{
			$current = $this_FunctionCall_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getBracketExpressionParserRuleCall_3());
		}
		this_BracketExpression_3=ruleBracketExpression
		{
			$current = $this_BracketExpression_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryExpressionAccess().getPrimaryExpressionAction_4_0(),
						$current);
				}
			)
			{
				newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getPointerParserRuleCall_4_1());
			}
			rulePointer
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleBracketExpression
entryRuleBracketExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBracketExpressionRule()); }
	iv_ruleBracketExpression=ruleBracketExpression
	{ $current=$iv_ruleBracketExpression.current; }
	EOF;

// Rule BracketExpression
ruleBracketExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getBracketExpressionAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBracketExpressionAccess().getSubExpressionParserRuleCall_1_0());
				}
				lv_sub_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBracketExpressionRule());
					}
					set(
						$current,
						"sub",
						lv_sub_1_0,
						"org.xtext.example.mydsl.JsonDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getBracketExpressionAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRulePointer
entryRulePointer returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPointerRule()); }
	iv_rulePointer=rulePointer
	{ $current=$iv_rulePointer.current.getText(); }
	EOF;

// Rule Pointer
rulePointer returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='?'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getPointerAccess().getQuestionMarkKeyword());
	}
;

// Entry rule entryRuleVariableCall
entryRuleVariableCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableCallRule()); }
	iv_ruleVariableCall=ruleVariableCall
	{ $current=$iv_ruleVariableCall.current; }
	EOF;

// Rule VariableCall
ruleVariableCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getVariableCallAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableCallRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableCallAccess().getCallerAuxiliarCallerParserRuleCall_1_0());
				}
				lv_caller_1_0=ruleAuxiliarCaller
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableCallRule());
					}
					add(
						$current,
						"caller",
						lv_caller_1_0,
						"org.xtext.example.mydsl.JsonDsl.AuxiliarCaller");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleAuxiliarCaller
entryRuleAuxiliarCaller returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAuxiliarCallerRule()); }
	iv_ruleAuxiliarCaller=ruleAuxiliarCaller
	{ $current=$iv_ruleAuxiliarCaller.current; }
	EOF;

// Rule AuxiliarCaller
ruleAuxiliarCaller returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAuxiliarCallerAccess().getFieldCallerParserRuleCall_0());
		}
		this_FieldCaller_0=ruleFieldCaller
		{
			$current = $this_FieldCaller_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAuxiliarCallerAccess().getArrayCallerParserRuleCall_1());
		}
		this_ArrayCaller_1=ruleArrayCaller
		{
			$current = $this_ArrayCaller_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFieldCaller
entryRuleFieldCaller returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFieldCallerRule()); }
	iv_ruleFieldCaller=ruleFieldCaller
	{ $current=$iv_ruleFieldCaller.current; }
	EOF;

// Rule FieldCaller
ruleFieldCaller returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='~'
		{
			newLeafNode(otherlv_0, grammarAccess.getFieldCallerAccess().getTildeKeyword_0());
		}
		(
			(
				lv_key_1_0=RULE_STRING
				{
					newLeafNode(lv_key_1_0, grammarAccess.getFieldCallerAccess().getKeySTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFieldCallerRule());
					}
					setWithLastConsumed(
						$current,
						"key",
						lv_key_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleArrayCaller
entryRuleArrayCaller returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArrayCallerRule()); }
	iv_ruleArrayCaller=ruleArrayCaller
	{ $current=$iv_ruleArrayCaller.current; }
	EOF;

// Rule ArrayCaller
ruleArrayCaller returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getArrayCallerAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				lv_index_1_0=RULE_INT
				{
					newLeafNode(lv_index_1_0, grammarAccess.getArrayCallerAccess().getIndexINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getArrayCallerRule());
					}
					addWithLastConsumed(
						$current,
						"index",
						lv_index_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getArrayCallerAccess().getCommaKeyword_2_0());
			}
			(
				(
					lv_index_3_0=RULE_INT
					{
						newLeafNode(lv_index_3_0, grammarAccess.getArrayCallerAccess().getIndexINTTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getArrayCallerRule());
						}
						addWithLastConsumed(
							$current,
							"index",
							lv_index_3_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)*
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getArrayCallerAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleFunctionCall
entryRuleFunctionCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionCallRule()); }
	iv_ruleFunctionCall=ruleFunctionCall
	{ $current=$iv_ruleFunctionCall.current; }
	EOF;

// Rule FunctionCall
ruleFunctionCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFunctionCallAccess().getIOFunctionsParserRuleCall_0());
		}
		this_IOFunctions_0=ruleIOFunctions
		{
			$current = $this_IOFunctions_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunctionCallAccess().getInfoFunctionsParserRuleCall_1());
		}
		this_InfoFunctions_1=ruleInfoFunctions
		{
			$current = $this_InfoFunctions_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunctionCallAccess().getManipFunctionsParserRuleCall_2());
		}
		this_ManipFunctions_2=ruleManipFunctions
		{
			$current = $this_ManipFunctions_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunctionCallAccess().getArithFunctionsParserRuleCall_3());
		}
		this_ArithFunctions_3=ruleArithFunctions
		{
			$current = $this_ArithFunctions_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunctionCallAccess().getAlterFunctionsParserRuleCall_4());
		}
		this_AlterFunctions_4=ruleAlterFunctions
		{
			$current = $this_AlterFunctions_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleIOFunctions
entryRuleIOFunctions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIOFunctionsRule()); }
	iv_ruleIOFunctions=ruleIOFunctions
	{ $current=$iv_ruleIOFunctions.current; }
	EOF;

// Rule IOFunctions
ruleIOFunctions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getIOFunctionsAccess().getLoadParserRuleCall_0());
		}
		this_Load_0=ruleLoad
		{
			$current = $this_Load_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getIOFunctionsAccess().getStoreParserRuleCall_1());
		}
		this_Store_1=ruleStore
		{
			$current = $this_Store_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getIOFunctionsAccess().getExportParserRuleCall_2());
		}
		this_Export_2=ruleExport
		{
			$current = $this_Export_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleInfoFunctions
entryRuleInfoFunctions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInfoFunctionsRule()); }
	iv_ruleInfoFunctions=ruleInfoFunctions
	{ $current=$iv_ruleInfoFunctions.current; }
	EOF;

// Rule InfoFunctions
ruleInfoFunctions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getInfoFunctionsAccess().getDepthParserRuleCall_0());
		}
		this_Depth_0=ruleDepth
		{
			$current = $this_Depth_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInfoFunctionsAccess().getFieldInfoParserRuleCall_1());
		}
		this_FieldInfo_1=ruleFieldInfo
		{
			$current = $this_FieldInfo_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInfoFunctionsAccess().getContainsParserRuleCall_2());
		}
		this_Contains_2=ruleContains
		{
			$current = $this_Contains_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleManipFunctions
entryRuleManipFunctions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getManipFunctionsRule()); }
	iv_ruleManipFunctions=ruleManipFunctions
	{ $current=$iv_ruleManipFunctions.current; }
	EOF;

// Rule ManipFunctions
ruleManipFunctions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getManipFunctionsAccess().getSelectParserRuleCall_0());
		}
		this_Select_0=ruleSelect
		{
			$current = $this_Select_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getManipFunctionsAccess().getConcatParserRuleCall_1());
		}
		this_Concat_1=ruleConcat
		{
			$current = $this_Concat_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleArithFunctions
entryRuleArithFunctions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArithFunctionsRule()); }
	iv_ruleArithFunctions=ruleArithFunctions
	{ $current=$iv_ruleArithFunctions.current; }
	EOF;

// Rule ArithFunctions
ruleArithFunctions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getArithFunctionsAccess().getSumParserRuleCall_0());
		}
		this_Sum_0=ruleSum
		{
			$current = $this_Sum_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getArithFunctionsAccess().getProductParserRuleCall_1());
		}
		this_Product_1=ruleProduct
		{
			$current = $this_Product_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getArithFunctionsAccess().getMeanParserRuleCall_2());
		}
		this_Mean_2=ruleMean
		{
			$current = $this_Mean_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAlterFunctions
entryRuleAlterFunctions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAlterFunctionsRule()); }
	iv_ruleAlterFunctions=ruleAlterFunctions
	{ $current=$iv_ruleAlterFunctions.current; }
	EOF;

// Rule AlterFunctions
ruleAlterFunctions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAlterFunctionsAccess().getAddParserRuleCall_0());
		}
		this_Add_0=ruleAdd
		{
			$current = $this_Add_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAlterFunctionsAccess().getInsertParserRuleCall_1());
		}
		this_Insert_1=ruleInsert
		{
			$current = $this_Insert_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAlterFunctionsAccess().getRenameParserRuleCall_2());
		}
		this_Rename_2=ruleRename
		{
			$current = $this_Rename_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAlterFunctionsAccess().getRemoveParserRuleCall_3());
		}
		this_Remove_3=ruleRemove
		{
			$current = $this_Remove_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAlterFunctionsAccess().getDeleteParserRuleCall_4());
		}
		this_Delete_4=ruleDelete
		{
			$current = $this_Delete_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLoad
entryRuleLoad returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLoadRule()); }
	iv_ruleLoad=ruleLoad
	{ $current=$iv_ruleLoad.current; }
	EOF;

// Rule Load
ruleLoad returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='LOAD'
		{
			newLeafNode(otherlv_0, grammarAccess.getLoadAccess().getLOADKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getLoadAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLoadAccess().getFileNameExpressionParserRuleCall_2_0());
				}
				lv_fileName_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoadRule());
					}
					set(
						$current,
						"fileName",
						lv_fileName_2_0,
						"org.xtext.example.mydsl.JsonDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getLoadAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleStore
entryRuleStore returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStoreRule()); }
	iv_ruleStore=ruleStore
	{ $current=$iv_ruleStore.current; }
	EOF;

// Rule Store
ruleStore returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='STORE'
		{
			newLeafNode(otherlv_0, grammarAccess.getStoreAccess().getSTOREKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getStoreAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStoreAccess().getExpressionExpressionParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStoreRule());
					}
					set(
						$current,
						"expression",
						lv_expression_2_0,
						"org.xtext.example.mydsl.JsonDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getStoreAccess().getRightParenthesisKeyword_3());
		}
		otherlv_4='IN'
		{
			newLeafNode(otherlv_4, grammarAccess.getStoreAccess().getINKeyword_4());
		}
		otherlv_5='('
		{
			newLeafNode(otherlv_5, grammarAccess.getStoreAccess().getLeftParenthesisKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStoreAccess().getFileNameExpressionParserRuleCall_6_0());
				}
				lv_fileName_6_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStoreRule());
					}
					set(
						$current,
						"fileName",
						lv_fileName_6_0,
						"org.xtext.example.mydsl.JsonDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getStoreAccess().getRightParenthesisKeyword_7());
		}
	)
;

// Entry rule entryRuleExport
entryRuleExport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExportRule()); }
	iv_ruleExport=ruleExport
	{ $current=$iv_ruleExport.current; }
	EOF;

// Rule Export
ruleExport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='EXPORT_CSV'
		{
			newLeafNode(otherlv_0, grammarAccess.getExportAccess().getEXPORT_CSVKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getExportAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExportAccess().getExpressionExpressionParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExportRule());
					}
					set(
						$current,
						"expression",
						lv_expression_2_0,
						"org.xtext.example.mydsl.JsonDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getExportAccess().getRightParenthesisKeyword_3());
		}
		otherlv_4='IN'
		{
			newLeafNode(otherlv_4, grammarAccess.getExportAccess().getINKeyword_4());
		}
		otherlv_5='('
		{
			newLeafNode(otherlv_5, grammarAccess.getExportAccess().getLeftParenthesisKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExportAccess().getFileNameExpressionParserRuleCall_6_0());
				}
				lv_fileName_6_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExportRule());
					}
					set(
						$current,
						"fileName",
						lv_fileName_6_0,
						"org.xtext.example.mydsl.JsonDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getExportAccess().getRightParenthesisKeyword_7());
		}
	)
;

// Entry rule entryRuleProcCall
entryRuleProcCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcCallRule()); }
	iv_ruleProcCall=ruleProcCall
	{ $current=$iv_ruleProcCall.current; }
	EOF;

// Rule ProcCall
ruleProcCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PRINT'
		{
			newLeafNode(otherlv_0, grammarAccess.getProcCallAccess().getPRINTKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getProcCallAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcCallAccess().getExpressionExpressionParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcCallRule());
					}
					set(
						$current,
						"expression",
						lv_expression_2_0,
						"org.xtext.example.mydsl.JsonDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getProcCallAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleDepth
entryRuleDepth returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDepthRule()); }
	iv_ruleDepth=ruleDepth
	{ $current=$iv_ruleDepth.current; }
	EOF;

// Rule Depth
ruleDepth returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='GET_DEPTH'
		{
			newLeafNode(otherlv_0, grammarAccess.getDepthAccess().getGET_DEPTHKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getDepthAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDepthAccess().getExpressionExpressionParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDepthRule());
					}
					set(
						$current,
						"expression",
						lv_expression_2_0,
						"org.xtext.example.mydsl.JsonDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getDepthAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleFieldInfo
entryRuleFieldInfo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFieldInfoRule()); }
	iv_ruleFieldInfo=ruleFieldInfo
	{ $current=$iv_ruleFieldInfo.current; }
	EOF;

// Rule FieldInfo
ruleFieldInfo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='GET_INFOS'
		{
			newLeafNode(otherlv_0, grammarAccess.getFieldInfoAccess().getGET_INFOSKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getFieldInfoAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFieldInfoAccess().getExpressionExpressionParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFieldInfoRule());
					}
					set(
						$current,
						"expression",
						lv_expression_2_0,
						"org.xtext.example.mydsl.JsonDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getFieldInfoAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleContains
entryRuleContains returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContainsRule()); }
	iv_ruleContains=ruleContains
	{ $current=$iv_ruleContains.current; }
	EOF;

// Rule Contains
ruleContains returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='IS'
		{
			newLeafNode(otherlv_0, grammarAccess.getContainsAccess().getISKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getContainsAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getContainsAccess().getKeysExpressionParserRuleCall_2_0());
				}
				lv_keys_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContainsRule());
					}
					add(
						$current,
						"keys",
						lv_keys_2_0,
						"org.xtext.example.mydsl.JsonDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getContainsAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getContainsAccess().getKeysExpressionParserRuleCall_3_1_0());
					}
					lv_keys_4_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getContainsRule());
						}
						add(
							$current,
							"keys",
							lv_keys_4_0,
							"org.xtext.example.mydsl.JsonDsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getContainsAccess().getRightParenthesisKeyword_4());
		}
		otherlv_6='IN'
		{
			newLeafNode(otherlv_6, grammarAccess.getContainsAccess().getINKeyword_5());
		}
		otherlv_7='('
		{
			newLeafNode(otherlv_7, grammarAccess.getContainsAccess().getLeftParenthesisKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getContainsAccess().getRightExpressionParserRuleCall_7_0());
				}
				lv_right_8_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContainsRule());
					}
					set(
						$current,
						"right",
						lv_right_8_0,
						"org.xtext.example.mydsl.JsonDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9=')'
		{
			newLeafNode(otherlv_9, grammarAccess.getContainsAccess().getRightParenthesisKeyword_8());
		}
	)
;

// Entry rule entryRuleSelect
entryRuleSelect returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectRule()); }
	iv_ruleSelect=ruleSelect
	{ $current=$iv_ruleSelect.current; }
	EOF;

// Rule Select
ruleSelect returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SELECT'
		{
			newLeafNode(otherlv_0, grammarAccess.getSelectAccess().getSELECTKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getSelectAccess().getLeftParenthesisKeyword_1());
		}
		(
			otherlv_2='*'
			{
				newLeafNode(otherlv_2, grammarAccess.getSelectAccess().getAsteriskKeyword_2_0());
			}
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getSelectAccess().getFieldsExpressionParserRuleCall_2_1_0_0());
						}
						lv_fields_3_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSelectRule());
							}
							add(
								$current,
								"fields",
								lv_fields_3_0,
								"org.xtext.example.mydsl.JsonDsl.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_4=','
					{
						newLeafNode(otherlv_4, grammarAccess.getSelectAccess().getCommaKeyword_2_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getSelectAccess().getFieldsExpressionParserRuleCall_2_1_1_1_0());
							}
							lv_fields_5_0=ruleExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSelectRule());
								}
								add(
									$current,
									"fields",
									lv_fields_5_0,
									"org.xtext.example.mydsl.JsonDsl.Expression");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
		)
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getSelectAccess().getRightParenthesisKeyword_3());
		}
		otherlv_7='FROM'
		{
			newLeafNode(otherlv_7, grammarAccess.getSelectAccess().getFROMKeyword_4());
		}
		otherlv_8='('
		{
			newLeafNode(otherlv_8, grammarAccess.getSelectAccess().getLeftParenthesisKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectAccess().getFromExpressionExpressionParserRuleCall_6_0());
				}
				lv_fromExpression_9_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectRule());
					}
					set(
						$current,
						"fromExpression",
						lv_fromExpression_9_0,
						"org.xtext.example.mydsl.JsonDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10=')'
		{
			newLeafNode(otherlv_10, grammarAccess.getSelectAccess().getRightParenthesisKeyword_7());
		}
		(
			(
				('WHERE')=>
				otherlv_11='WHERE'
				{
					newLeafNode(otherlv_11, grammarAccess.getSelectAccess().getWHEREKeyword_8_0());
				}
			)
			otherlv_12='('
			{
				newLeafNode(otherlv_12, grammarAccess.getSelectAccess().getLeftParenthesisKeyword_8_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectAccess().getWhereExpressionExpressionParserRuleCall_8_2_0());
					}
					lv_whereExpression_13_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectRule());
						}
						set(
							$current,
							"whereExpression",
							lv_whereExpression_13_0,
							"org.xtext.example.mydsl.JsonDsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_14=')'
			{
				newLeafNode(otherlv_14, grammarAccess.getSelectAccess().getRightParenthesisKeyword_8_3());
			}
		)?
	)
;

// Entry rule entryRuleConcat
entryRuleConcat returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConcatRule()); }
	iv_ruleConcat=ruleConcat
	{ $current=$iv_ruleConcat.current; }
	EOF;

// Rule Concat
ruleConcat returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='CONCAT'
		{
			newLeafNode(otherlv_0, grammarAccess.getConcatAccess().getCONCATKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getConcatAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConcatAccess().getExpressionsExpressionParserRuleCall_2_0());
				}
				lv_expressions_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConcatRule());
					}
					add(
						$current,
						"expressions",
						lv_expressions_2_0,
						"org.xtext.example.mydsl.JsonDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getConcatAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConcatAccess().getExpressionsExpressionParserRuleCall_3_1_0());
					}
					lv_expressions_4_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConcatRule());
						}
						add(
							$current,
							"expressions",
							lv_expressions_4_0,
							"org.xtext.example.mydsl.JsonDsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getConcatAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleSum
entryRuleSum returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSumRule()); }
	iv_ruleSum=ruleSum
	{ $current=$iv_ruleSum.current; }
	EOF;

// Rule Sum
ruleSum returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SUM'
		{
			newLeafNode(otherlv_0, grammarAccess.getSumAccess().getSUMKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getSumAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSumAccess().getExpressionExpressionParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSumRule());
					}
					set(
						$current,
						"expression",
						lv_expression_2_0,
						"org.xtext.example.mydsl.JsonDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getSumAccess().getRightParenthesisKeyword_3());
		}
		(
			otherlv_4='ON'
			{
				newLeafNode(otherlv_4, grammarAccess.getSumAccess().getONKeyword_4_0());
			}
			otherlv_5='('
			{
				newLeafNode(otherlv_5, grammarAccess.getSumAccess().getLeftParenthesisKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSumAccess().getFieldsExpressionParserRuleCall_4_2_0());
					}
					lv_fields_6_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSumRule());
						}
						add(
							$current,
							"fields",
							lv_fields_6_0,
							"org.xtext.example.mydsl.JsonDsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getSumAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSumAccess().getFieldsExpressionParserRuleCall_4_3_1_0());
						}
						lv_fields_8_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSumRule());
							}
							add(
								$current,
								"fields",
								lv_fields_8_0,
								"org.xtext.example.mydsl.JsonDsl.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9=')'
			{
				newLeafNode(otherlv_9, grammarAccess.getSumAccess().getRightParenthesisKeyword_4_4());
			}
		)?
		(
			(
				('WHERE')=>
				otherlv_10='WHERE'
				{
					newLeafNode(otherlv_10, grammarAccess.getSumAccess().getWHEREKeyword_5_0());
				}
			)
			otherlv_11='('
			{
				newLeafNode(otherlv_11, grammarAccess.getSumAccess().getLeftParenthesisKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSumAccess().getWhereExpressionExpressionParserRuleCall_5_2_0());
					}
					lv_whereExpression_12_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSumRule());
						}
						set(
							$current,
							"whereExpression",
							lv_whereExpression_12_0,
							"org.xtext.example.mydsl.JsonDsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_13=')'
			{
				newLeafNode(otherlv_13, grammarAccess.getSumAccess().getRightParenthesisKeyword_5_3());
			}
		)?
	)
;

// Entry rule entryRuleProduct
entryRuleProduct returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProductRule()); }
	iv_ruleProduct=ruleProduct
	{ $current=$iv_ruleProduct.current; }
	EOF;

// Rule Product
ruleProduct returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PRODUCT'
		{
			newLeafNode(otherlv_0, grammarAccess.getProductAccess().getPRODUCTKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getProductAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProductAccess().getExpressionExpressionParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProductRule());
					}
					set(
						$current,
						"expression",
						lv_expression_2_0,
						"org.xtext.example.mydsl.JsonDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getProductAccess().getRightParenthesisKeyword_3());
		}
		(
			otherlv_4='ON'
			{
				newLeafNode(otherlv_4, grammarAccess.getProductAccess().getONKeyword_4_0());
			}
			otherlv_5='('
			{
				newLeafNode(otherlv_5, grammarAccess.getProductAccess().getLeftParenthesisKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProductAccess().getFieldsExpressionParserRuleCall_4_2_0());
					}
					lv_fields_6_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProductRule());
						}
						add(
							$current,
							"fields",
							lv_fields_6_0,
							"org.xtext.example.mydsl.JsonDsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getProductAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getProductAccess().getFieldsExpressionParserRuleCall_4_3_1_0());
						}
						lv_fields_8_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getProductRule());
							}
							add(
								$current,
								"fields",
								lv_fields_8_0,
								"org.xtext.example.mydsl.JsonDsl.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9=')'
			{
				newLeafNode(otherlv_9, grammarAccess.getProductAccess().getRightParenthesisKeyword_4_4());
			}
		)?
		(
			(
				('WHERE')=>
				otherlv_10='WHERE'
				{
					newLeafNode(otherlv_10, grammarAccess.getProductAccess().getWHEREKeyword_5_0());
				}
			)
			otherlv_11='('
			{
				newLeafNode(otherlv_11, grammarAccess.getProductAccess().getLeftParenthesisKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProductAccess().getWhereExpressionExpressionParserRuleCall_5_2_0());
					}
					lv_whereExpression_12_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProductRule());
						}
						set(
							$current,
							"whereExpression",
							lv_whereExpression_12_0,
							"org.xtext.example.mydsl.JsonDsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_13=')'
			{
				newLeafNode(otherlv_13, grammarAccess.getProductAccess().getRightParenthesisKeyword_5_3());
			}
		)?
	)
;

// Entry rule entryRuleMean
entryRuleMean returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMeanRule()); }
	iv_ruleMean=ruleMean
	{ $current=$iv_ruleMean.current; }
	EOF;

// Rule Mean
ruleMean returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='MEAN'
		{
			newLeafNode(otherlv_0, grammarAccess.getMeanAccess().getMEANKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getMeanAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMeanAccess().getExpressionExpressionParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMeanRule());
					}
					set(
						$current,
						"expression",
						lv_expression_2_0,
						"org.xtext.example.mydsl.JsonDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getMeanAccess().getRightParenthesisKeyword_3());
		}
		(
			otherlv_4='ON'
			{
				newLeafNode(otherlv_4, grammarAccess.getMeanAccess().getONKeyword_4_0());
			}
			otherlv_5='('
			{
				newLeafNode(otherlv_5, grammarAccess.getMeanAccess().getLeftParenthesisKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMeanAccess().getFieldsExpressionParserRuleCall_4_2_0());
					}
					lv_fields_6_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMeanRule());
						}
						add(
							$current,
							"fields",
							lv_fields_6_0,
							"org.xtext.example.mydsl.JsonDsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getMeanAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMeanAccess().getFieldsExpressionParserRuleCall_4_3_1_0());
						}
						lv_fields_8_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMeanRule());
							}
							add(
								$current,
								"fields",
								lv_fields_8_0,
								"org.xtext.example.mydsl.JsonDsl.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9=')'
			{
				newLeafNode(otherlv_9, grammarAccess.getMeanAccess().getRightParenthesisKeyword_4_4());
			}
		)?
		(
			(
				('WHERE')=>
				otherlv_10='WHERE'
				{
					newLeafNode(otherlv_10, grammarAccess.getMeanAccess().getWHEREKeyword_5_0());
				}
			)
			otherlv_11='('
			{
				newLeafNode(otherlv_11, grammarAccess.getMeanAccess().getLeftParenthesisKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMeanAccess().getWhereExpressionExpressionParserRuleCall_5_2_0());
					}
					lv_whereExpression_12_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMeanRule());
						}
						set(
							$current,
							"whereExpression",
							lv_whereExpression_12_0,
							"org.xtext.example.mydsl.JsonDsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_13=')'
			{
				newLeafNode(otherlv_13, grammarAccess.getMeanAccess().getRightParenthesisKeyword_5_3());
			}
		)?
	)
;

// Entry rule entryRuleAdd
entryRuleAdd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAddRule()); }
	iv_ruleAdd=ruleAdd
	{ $current=$iv_ruleAdd.current; }
	EOF;

// Rule Add
ruleAdd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ADD'
		{
			newLeafNode(otherlv_0, grammarAccess.getAddAccess().getADDKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getAddAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAddAccess().getExpressionExpressionParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAddRule());
					}
					set(
						$current,
						"expression",
						lv_expression_2_0,
						"org.xtext.example.mydsl.JsonDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getAddAccess().getRightParenthesisKeyword_3());
		}
		otherlv_4='IN'
		{
			newLeafNode(otherlv_4, grammarAccess.getAddAccess().getINKeyword_4());
		}
		otherlv_5='('
		{
			newLeafNode(otherlv_5, grammarAccess.getAddAccess().getLeftParenthesisKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAddAccess().getVariableExpressionParserRuleCall_6_0());
				}
				lv_variable_6_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAddRule());
					}
					set(
						$current,
						"variable",
						lv_variable_6_0,
						"org.xtext.example.mydsl.JsonDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getAddAccess().getRightParenthesisKeyword_7());
		}
		(
			otherlv_8='ON'
			{
				newLeafNode(otherlv_8, grammarAccess.getAddAccess().getONKeyword_8_0());
			}
			otherlv_9='('
			{
				newLeafNode(otherlv_9, grammarAccess.getAddAccess().getLeftParenthesisKeyword_8_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAddAccess().getFieldsExpressionParserRuleCall_8_2_0());
					}
					lv_fields_10_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAddRule());
						}
						add(
							$current,
							"fields",
							lv_fields_10_0,
							"org.xtext.example.mydsl.JsonDsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_11=','
				{
					newLeafNode(otherlv_11, grammarAccess.getAddAccess().getCommaKeyword_8_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAddAccess().getFieldsExpressionParserRuleCall_8_3_1_0());
						}
						lv_fields_12_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAddRule());
							}
							add(
								$current,
								"fields",
								lv_fields_12_0,
								"org.xtext.example.mydsl.JsonDsl.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_13=')'
			{
				newLeafNode(otherlv_13, grammarAccess.getAddAccess().getRightParenthesisKeyword_8_4());
			}
		)?
	)
;

// Entry rule entryRuleInsert
entryRuleInsert returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInsertRule()); }
	iv_ruleInsert=ruleInsert
	{ $current=$iv_ruleInsert.current; }
	EOF;

// Rule Insert
ruleInsert returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='INSERT'
		{
			newLeafNode(otherlv_0, grammarAccess.getInsertAccess().getINSERTKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getInsertAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInsertAccess().getValueExpressionParserRuleCall_2_0());
				}
				lv_value_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInsertRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.example.mydsl.JsonDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getInsertAccess().getRightParenthesisKeyword_3());
		}
		otherlv_4='IN'
		{
			newLeafNode(otherlv_4, grammarAccess.getInsertAccess().getINKeyword_4());
		}
		otherlv_5='('
		{
			newLeafNode(otherlv_5, grammarAccess.getInsertAccess().getLeftParenthesisKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInsertAccess().getVariableExpressionParserRuleCall_6_0());
				}
				lv_variable_6_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInsertRule());
					}
					set(
						$current,
						"variable",
						lv_variable_6_0,
						"org.xtext.example.mydsl.JsonDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getInsertAccess().getRightParenthesisKeyword_7());
		}
		(
			otherlv_8='('
			{
				newLeafNode(otherlv_8, grammarAccess.getInsertAccess().getLeftParenthesisKeyword_8_0());
			}
			otherlv_9='WHERE'
			{
				newLeafNode(otherlv_9, grammarAccess.getInsertAccess().getWHEREKeyword_8_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInsertAccess().getWhereExpressionExpressionParserRuleCall_8_2_0());
					}
					lv_whereExpression_10_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInsertRule());
						}
						set(
							$current,
							"whereExpression",
							lv_whereExpression_10_0,
							"org.xtext.example.mydsl.JsonDsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_11=')'
			{
				newLeafNode(otherlv_11, grammarAccess.getInsertAccess().getRightParenthesisKeyword_8_3());
			}
		)?
	)
;

// Entry rule entryRuleRename
entryRuleRename returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRenameRule()); }
	iv_ruleRename=ruleRename
	{ $current=$iv_ruleRename.current; }
	EOF;

// Rule Rename
ruleRename returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='RENAME'
		{
			newLeafNode(otherlv_0, grammarAccess.getRenameAccess().getRENAMEKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getRenameAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRenameAccess().getCallVariableCallParserRuleCall_2_0());
				}
				lv_call_2_0=ruleVariableCall
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRenameRule());
					}
					set(
						$current,
						"call",
						lv_call_2_0,
						"org.xtext.example.mydsl.JsonDsl.VariableCall");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getRenameAccess().getRightParenthesisKeyword_3());
		}
		otherlv_4='ON'
		{
			newLeafNode(otherlv_4, grammarAccess.getRenameAccess().getONKeyword_4());
		}
		otherlv_5='('
		{
			newLeafNode(otherlv_5, grammarAccess.getRenameAccess().getLeftParenthesisKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRenameAccess().getFieldsExpressionParserRuleCall_6_0());
				}
				lv_fields_6_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRenameRule());
					}
					add(
						$current,
						"fields",
						lv_fields_6_0,
						"org.xtext.example.mydsl.JsonDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_7=','
			{
				newLeafNode(otherlv_7, grammarAccess.getRenameAccess().getCommaKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRenameAccess().getFieldsExpressionParserRuleCall_7_1_0());
					}
					lv_fields_8_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRenameRule());
						}
						add(
							$current,
							"fields",
							lv_fields_8_0,
							"org.xtext.example.mydsl.JsonDsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_9=')'
		{
			newLeafNode(otherlv_9, grammarAccess.getRenameAccess().getRightParenthesisKeyword_8());
		}
		otherlv_10='TO'
		{
			newLeafNode(otherlv_10, grammarAccess.getRenameAccess().getTOKeyword_9());
		}
		otherlv_11='('
		{
			newLeafNode(otherlv_11, grammarAccess.getRenameAccess().getLeftParenthesisKeyword_10());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRenameAccess().getNfieldsExpressionParserRuleCall_11_0());
				}
				lv_nfields_12_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRenameRule());
					}
					add(
						$current,
						"nfields",
						lv_nfields_12_0,
						"org.xtext.example.mydsl.JsonDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_13=','
			{
				newLeafNode(otherlv_13, grammarAccess.getRenameAccess().getCommaKeyword_12_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRenameAccess().getNfieldsExpressionParserRuleCall_12_1_0());
					}
					lv_nfields_14_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRenameRule());
						}
						add(
							$current,
							"nfields",
							lv_nfields_14_0,
							"org.xtext.example.mydsl.JsonDsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_15=')'
		{
			newLeafNode(otherlv_15, grammarAccess.getRenameAccess().getRightParenthesisKeyword_13());
		}
	)
;

// Entry rule entryRuleDelete
entryRuleDelete returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeleteRule()); }
	iv_ruleDelete=ruleDelete
	{ $current=$iv_ruleDelete.current; }
	EOF;

// Rule Delete
ruleDelete returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DELETE'
		{
			newLeafNode(otherlv_0, grammarAccess.getDeleteAccess().getDELETEKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getDeleteAccess().getLeftParenthesisKeyword_1());
		}
		(
			otherlv_2='*'
			{
				newLeafNode(otherlv_2, grammarAccess.getDeleteAccess().getAsteriskKeyword_2_0());
			}
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getDeleteAccess().getFieldsExpressionParserRuleCall_2_1_0_0());
						}
						lv_fields_3_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDeleteRule());
							}
							add(
								$current,
								"fields",
								lv_fields_3_0,
								"org.xtext.example.mydsl.JsonDsl.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_4=','
					{
						newLeafNode(otherlv_4, grammarAccess.getDeleteAccess().getCommaKeyword_2_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getDeleteAccess().getFieldsExpressionParserRuleCall_2_1_1_1_0());
							}
							lv_fields_5_0=ruleExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getDeleteRule());
								}
								add(
									$current,
									"fields",
									lv_fields_5_0,
									"org.xtext.example.mydsl.JsonDsl.Expression");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
		)
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getDeleteAccess().getRightParenthesisKeyword_3());
		}
		otherlv_7='FROM'
		{
			newLeafNode(otherlv_7, grammarAccess.getDeleteAccess().getFROMKeyword_4());
		}
		otherlv_8='('
		{
			newLeafNode(otherlv_8, grammarAccess.getDeleteAccess().getLeftParenthesisKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeleteAccess().getFromExpressionExpressionParserRuleCall_6_0());
				}
				lv_fromExpression_9_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeleteRule());
					}
					set(
						$current,
						"fromExpression",
						lv_fromExpression_9_0,
						"org.xtext.example.mydsl.JsonDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10=')'
		{
			newLeafNode(otherlv_10, grammarAccess.getDeleteAccess().getRightParenthesisKeyword_7());
		}
		(
			(
				('WHERE')=>
				otherlv_11='WHERE'
				{
					newLeafNode(otherlv_11, grammarAccess.getDeleteAccess().getWHEREKeyword_8_0());
				}
			)
			otherlv_12='('
			{
				newLeafNode(otherlv_12, grammarAccess.getDeleteAccess().getLeftParenthesisKeyword_8_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDeleteAccess().getWhereExpressionExpressionParserRuleCall_8_2_0());
					}
					lv_whereExpression_13_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeleteRule());
						}
						set(
							$current,
							"whereExpression",
							lv_whereExpression_13_0,
							"org.xtext.example.mydsl.JsonDsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_14=')'
			{
				newLeafNode(otherlv_14, grammarAccess.getDeleteAccess().getRightParenthesisKeyword_8_3());
			}
		)?
	)
;

// Entry rule entryRuleRemove
entryRuleRemove returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRemoveRule()); }
	iv_ruleRemove=ruleRemove
	{ $current=$iv_ruleRemove.current; }
	EOF;

// Rule Remove
ruleRemove returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='REMOVE'
		{
			newLeafNode(otherlv_0, grammarAccess.getRemoveAccess().getREMOVEKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getRemoveAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRemoveAccess().getValueExpressionParserRuleCall_2_0());
				}
				lv_value_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRemoveRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.example.mydsl.JsonDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getRemoveAccess().getRightParenthesisKeyword_3());
		}
		otherlv_4='IN'
		{
			newLeafNode(otherlv_4, grammarAccess.getRemoveAccess().getINKeyword_4());
		}
		otherlv_5='('
		{
			newLeafNode(otherlv_5, grammarAccess.getRemoveAccess().getLeftParenthesisKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRemoveAccess().getVariableExpressionParserRuleCall_6_0());
				}
				lv_variable_6_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRemoveRule());
					}
					set(
						$current,
						"variable",
						lv_variable_6_0,
						"org.xtext.example.mydsl.JsonDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getRemoveAccess().getRightParenthesisKeyword_7());
		}
		(
			otherlv_8='('
			{
				newLeafNode(otherlv_8, grammarAccess.getRemoveAccess().getLeftParenthesisKeyword_8_0());
			}
			otherlv_9='WHERE'
			{
				newLeafNode(otherlv_9, grammarAccess.getRemoveAccess().getWHEREKeyword_8_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRemoveAccess().getWhereExpressionExpressionParserRuleCall_8_2_0());
					}
					lv_whereExpression_10_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRemoveRule());
						}
						set(
							$current,
							"whereExpression",
							lv_whereExpression_10_0,
							"org.xtext.example.mydsl.JsonDsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_11=')'
			{
				newLeafNode(otherlv_11, grammarAccess.getRemoveAccess().getRightParenthesisKeyword_8_3());
			}
		)?
	)
;

// Entry rule entryRuleConstant
entryRuleConstant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstantRule()); }
	iv_ruleConstant=ruleConstant
	{ $current=$iv_ruleConstant.current; }
	EOF;

// Rule Constant
ruleConstant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getConstantAccess().getPrimitiveParserRuleCall_0());
		}
		this_Primitive_0=rulePrimitive
		{
			$current = $this_Primitive_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConstantAccess().getArrayParserRuleCall_1());
		}
		this_Array_1=ruleArray
		{
			$current = $this_Array_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConstantAccess().getJSonObjectParserRuleCall_2());
		}
		this_JSonObject_2=ruleJSonObject
		{
			$current = $this_JSonObject_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePrimitive
entryRulePrimitive returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimitiveRule()); }
	iv_rulePrimitive=rulePrimitive
	{ $current=$iv_rulePrimitive.current; }
	EOF;

// Rule Primitive
rulePrimitive returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_str_0_0=RULE_STRING
				{
					newLeafNode(lv_str_0_0, grammarAccess.getPrimitiveAccess().getStrSTRINGTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrimitiveRule());
					}
					setWithLastConsumed(
						$current,
						"str",
						lv_str_0_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getPrimitiveAccess().getNumNUMBERParserRuleCall_1_0());
				}
				lv_num_1_0=ruleNUMBER
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPrimitiveRule());
					}
					set(
						$current,
						"num",
						lv_num_1_0,
						"org.xtext.example.mydsl.JsonDsl.NUMBER");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_bool_2_0=RULE_BOOL
				{
					newLeafNode(lv_bool_2_0, grammarAccess.getPrimitiveAccess().getBoolBOOLTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrimitiveRule());
					}
					setWithLastConsumed(
						$current,
						"bool",
						lv_bool_2_0,
						"org.xtext.example.mydsl.JsonDsl.BOOL");
				}
			)
		)
		    |
		(
			(
				lv_nil_3_0=RULE_NULL
				{
					newLeafNode(lv_nil_3_0, grammarAccess.getPrimitiveAccess().getNilNULLTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrimitiveRule());
					}
					setWithLastConsumed(
						$current,
						"nil",
						lv_nil_3_0,
						"org.xtext.example.mydsl.JsonDsl.NULL");
				}
			)
		)
	)
;

// Entry rule entryRuleArray
entryRuleArray returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArrayRule()); }
	iv_ruleArray=ruleArray
	{ $current=$iv_ruleArray.current; }
	EOF;

// Rule Array
ruleArray returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getArrayAccess().getArrayAction_0(),
					$current);
			}
		)
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getArrayAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getArrayAccess().getValuesExpressionParserRuleCall_2_0_0());
					}
					lv_values_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArrayRule());
						}
						add(
							$current,
							"values",
							lv_values_2_0,
							"org.xtext.example.mydsl.JsonDsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getArrayAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getArrayAccess().getValuesExpressionParserRuleCall_2_1_1_0());
						}
						lv_values_4_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getArrayRule());
							}
							add(
								$current,
								"values",
								lv_values_4_0,
								"org.xtext.example.mydsl.JsonDsl.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=']'
		{
			newLeafNode(otherlv_5, grammarAccess.getArrayAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleJSonObject
entryRuleJSonObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJSonObjectRule()); }
	iv_ruleJSonObject=ruleJSonObject
	{ $current=$iv_ruleJSonObject.current; }
	EOF;

// Rule JSonObject
ruleJSonObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getJSonObjectAccess().getJSonObjectAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getJSonObjectAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getJSonObjectAccess().getFieldsFieldParserRuleCall_2_0_0());
					}
					lv_fields_2_0=ruleField
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJSonObjectRule());
						}
						add(
							$current,
							"fields",
							lv_fields_2_0,
							"org.xtext.example.mydsl.JsonDsl.Field");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getJSonObjectAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getJSonObjectAccess().getFieldsFieldParserRuleCall_2_1_1_0());
						}
						lv_fields_4_0=ruleField
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getJSonObjectRule());
							}
							add(
								$current,
								"fields",
								lv_fields_4_0,
								"org.xtext.example.mydsl.JsonDsl.Field");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getJSonObjectAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleField
entryRuleField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFieldRule()); }
	iv_ruleField=ruleField
	{ $current=$iv_ruleField.current; }
	EOF;

// Rule Field
ruleField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFieldAccess().getKeyExpressionParserRuleCall_0_0());
				}
				lv_key_0_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFieldRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"org.xtext.example.mydsl.JsonDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getFieldAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFieldAccess().getValueExpressionParserRuleCall_2_0());
				}
				lv_value_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFieldRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.example.mydsl.JsonDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleNUMBER
entryRuleNUMBER returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNUMBERRule()); }
	iv_ruleNUMBER=ruleNUMBER
	{ $current=$iv_ruleNUMBER.current.getText(); }
	EOF;

// Rule NUMBER
ruleNUMBER returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_0());
		}
		    |
		this_DOUBLE_1=RULE_DOUBLE
		{
			$current.merge(this_DOUBLE_1);
		}
		{
			newLeafNode(this_DOUBLE_1, grammarAccess.getNUMBERAccess().getDOUBLETerminalRuleCall_1());
		}
	)
;

RULE_NULL : 'null';

RULE_BOOL : ('true'|'false');

RULE_DOUBLE : ('0'..'9')+ '.' ('0'..'9')* 'e' ('0'..'9')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
